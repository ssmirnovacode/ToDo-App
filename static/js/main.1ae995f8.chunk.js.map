{"version":3,"sources":["firebase.config.js","components/footer/footer.js","components/user-panel/user-panel.js","components/app-header/app-header.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.js","components/login/login.js","components/register/register.js","components/content/content.js","components/app/app.js","utils/tools.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","Footer","darkmode","className","href","target","UserPanel","props","name","handleLogOut","onClick","AppHeader","toDo","done","SearchPanel","value","onSearch","placeholder","onChange","e","ItemStatusFilter","label","map","btn","btnClass","filter","type","id","onSwitch","TodoListItem","onDelete","onToggleDone","onToggleImportant","important","itemClass","data-todoitem","TodoList","items","item","itemProps","ItemAddForm","useState","setLabel","onSubmit","preventDefault","onAdd","required","initialLoginState","loginError","user","email","password","LoginForm","loginState","setLoginState","onLabelChange","signInWithEmailAndPassword","then","catch","err","message","htmlFor","initialRegState","username","password2","RegisterForm","regState","setRegState","data","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","photoURL","onRegister","console","error","Content","loggedIn","pendingCount","doneCount","pattern","searchItems","onSwitchFilter","dark","visibleItems","deleteItem","toggleDone","toggleImportant","addItem","signInType","setSignInType","guestUserSignIn","App","setItems","setPattern","setFilter","setLoggedIn","setDark","useEffect","collection","get","snapshot","todos","forEach","doc","push","firebaseLooper","onAuthStateChanged","userObj","createNewItem","owner","uid","Math","random","toString","a","newItem","set","window","confirm","delete","idX","findIndex","newArray","slice","toggleStatus","array","statusName","oldItem","find","update","Error","signOut","toLowerCase","indexOf","userItems","el","length","contentProps","filterName","log","ReactDOM","render","document","getElementById"],"mappings":"mbAeAA,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wEACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAIXR,IAASS,OAEF,IAAMC,EAAKV,IAASW,YAEZX,IAAf,E,eCJeY,EAbA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACb,OACI,sBAAKC,UAAWD,EAAW,kBAAmB,SAA9C,UACI,qBAAKC,UAAU,sBAAf,sCACI,sBAAKA,UAAU,sBAAf,UACI,mBAAGC,KAAM,4CAA6CC,OAAO,QAA7D,SAAsE,mBAAGF,UAAU,oCACnF,mBAAGC,KAAM,4CAA6CC,OAAO,QAA7D,SAAsE,mBAAGF,UAAU,oCACnF,mBAAGC,KAAM,4CAA6CC,OAAO,QAA7D,SAAsE,mBAAGF,UAAU,yCCKxFG,G,MAZG,SAACC,GAAW,IAEnBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,aAEb,OACI,sBAAKN,UAAU,oBAAf,UACI,sBAAKA,UAAU,gBAAf,oBAAuCK,GAAQ,WAC/C,wBAAQL,UAAU,mCAAmCO,QAASD,EAA9D,0BCEGE,G,MATG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACxB,OACE,sBAAKV,UAAU,oBAAf,UACE,2CACA,+BAAKU,EAAL,UAAkBD,EAAlB,mBCESE,G,MANK,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACzB,OAAO,uBAAOb,UAAU,4BAA4Bc,YAAY,SAChEC,SAAU,SAACC,GAAD,OAAOH,EAASG,EAAEd,OAAOU,QACnCA,MAAOA,MCoBIK,EAxBU,SAACb,GAQxB,OACE,qBAAKJ,UAAU,YAAf,SAPgB,CAChB,CAACK,KAAM,MAAOa,MAAO,OACrB,CAACb,KAAM,SAAUa,MAAO,WACxB,CAACb,KAAM,OAAQa,MAAO,SAMVC,KAAI,SAAAC,GACV,IACMC,EADWjB,EAAMkB,SAAWF,EAAIf,KACV,eAAiB,4BAC7C,OACE,wBAAuBkB,KAAK,SAASC,GAAIJ,EAAIf,KAC7CL,UAAWqB,EAAUd,QAAS,SAACS,GAAOZ,EAAMqB,SAAST,EAAEd,OAAOsB,KAD9D,SACqEJ,EAAIF,OAD5DE,EAAIf,Y,QC2BdqB,G,MAzCM,SAACtB,GAAW,IAEtBc,EAA+Ed,EAA/Ec,MAAOS,EAAwEvB,EAAxEuB,SAAUC,EAA8DxB,EAA9DwB,aAAcC,EAAgDzB,EAAhDyB,kBAAmBC,EAA6B1B,EAA7B0B,UAAWpB,EAAkBN,EAAlBM,KAAMX,EAAYK,EAAZL,SAEtEgC,EAAYhC,EAAW,0BAA4B,iBAEnDW,IACFqB,GAAa,SAEXD,IACFC,GAAa,cAGf,IAAMV,EAAWS,EAAY,wDAA0D,iDAEvF,OACE,sBAAK9B,UAAW+B,EAAWC,iBAAA,EAA3B,UACE,qBACEhC,UAAU,uBACVO,QAASqB,EAFX,SAGGV,IAGH,sBAAKlB,UAAU,iBAAf,UACE,wBAAQuB,KAAK,SACLvB,UAAWD,EAAWsB,EAAS,YAAcA,EAC7Cd,QAASsB,EAFjB,SAGE,mBAAG7B,UAAU,wBAEf,wBAAQuB,KAAK,SACLvB,UAAU,+CACVO,QAASoB,EAFjB,SAGE,mBAAG3B,UAAU,4BCTViC,G,MAtBE,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,MAAOP,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,kBAAmB9B,EAAc,EAAdA,SAEjE,OACI,oBAAIC,UAAU,uBAAd,SAEQkC,EAAMf,KAAI,SAAAgB,GAAS,IAERX,EAAmBW,EAAnBX,GAAMY,EAFC,YAEYD,EAFZ,QAGd,OACI,oBAAInC,UAAWD,EAAW,2BAA6B,kBAAvD,SACI,cAAC,EAAD,2BAAkBqC,GAAlB,IAA6BT,SAAU,kBAAMA,EAASH,IAClDK,kBAAoB,kBAAMA,EAAkBL,IAC5CI,aAAe,kBAAMA,EAAaJ,IAClCzB,SAAUA,MAJ6DyB,UCexFa,G,MAzBK,SAACjC,GAAW,IAAD,EAEDkC,mBAAS,IAFR,mBAEpBpB,EAFoB,KAEbqB,EAFa,KAc3B,OACI,uBAAMvC,UAAU,uBAAuBwC,SAP1B,SAACxB,GACdA,EAAEyB,iBACFrC,EAAMsC,MAAMxB,GACZqB,EAAS,KAIT,UACI,uBAAOI,UAAQ,EAACpB,KAAK,OAAOvB,UAAU,eAClCe,SAbU,SAACC,GACnBuB,EAASvB,EAAEd,OAAOU,QAaVE,YAAY,yBACZF,MAAOM,IACX,wBAAQlB,UAAU,4BAAlB,2BCnBN4C,G,MAAoB,CACtBC,WAAY,GACZC,KAAM,CACFC,MAAO,GACPC,SAAU,MAiDHC,EA7CG,SAAC7C,GAAW,IAAD,EAEWkC,mBAASM,GAFpB,mBAElBM,EAFkB,KAENC,EAFM,KAGnBC,EAAgB,SAACpC,GACnBmC,GAAc,SAAAD,GAAU,kCACjBA,GADiB,IAEpBJ,KAAK,2BACEI,EAAWJ,MADd,kBAEC9B,EAAEd,OAAOG,KAAOW,EAAEd,OAAOU,cAiBtC,OACI,uBAAMZ,UAAU,oBAAoBwC,SAbvB,SAACxB,GACdA,EAAEyB,iBACFvD,EAASS,OAAO0D,2BAA2BH,EAAWJ,KAAKC,MAAOG,EAAWJ,KAAKE,UACjFM,MAAK,WACFH,EAAcP,MAEjBW,OAAM,SAAAC,GAAG,OAAIL,GAAc,SAAAD,GAAU,kCAC/BA,GAD+B,IAElCL,WAAYW,EAAIC,iBAKpB,UACI,uBAAOC,QAAQ,QAAf,qBACC,uBAAOf,UAAQ,EAACpB,KAAK,QAAQvB,UAAU,eAAeK,KAAK,QACxDU,SAAUqC,EACVtC,YAAY,mBACZF,MAAOsC,EAAWH,QACtB,uBAAOW,QAAQ,WAAf,wBACA,uBAAOf,UAAQ,EAACpB,KAAK,WAAWvB,UAAU,eAAeK,KAAK,WAC1DU,SAAUqC,EACVtC,YAAY,sBACZF,MAAOsC,EAAWF,WAElBE,EAAWL,WAAa,qBAAK7C,UAAU,cAAf,SAA8BkD,EAAWL,aAAoB,KAEzF,wBAAQ7C,UAAU,4BAA4BuB,KAAK,SAAnD,uBChDNoC,G,MAAkB,CACpBC,SAAU,GACVb,MAAO,GACPC,SAAU,GACVa,UAAW,KAoEAC,EAjEM,SAAC1D,GAAW,IAAD,EAEIkC,mBAASqB,GAFb,mBAErBI,EAFqB,KAEXC,EAFW,KAItBZ,EAAgB,SAACpC,GACnBgD,EAAY,2BACLD,GADI,kBAEN/C,EAAEd,OAAOG,KAAOW,EAAEd,OAAOU,UA0BlC,OAEI,uBAAMZ,UAAU,uBAAuBwC,SAZ1B,SAACxB,GAZK,IAACiD,GAapBjD,EAAEyB,iBACEsB,EAASf,WAAae,EAASF,aAdfI,EAeDF,EAdnB7E,EAASS,OAAOuE,+BAA+BD,EAAKlB,MAAOkB,EAAKjB,UAC/DM,MAAK,kBAAMpE,EAASS,OAAOwE,YAAYC,cAAc,CAClDC,YAAaJ,EAAKL,SAClBU,SAAU,UAGbhB,MAAM,kBAAMlD,EAAMmE,gBAClBhB,OAAO,SAAAC,GAAG,OAAIgB,QAAQC,MAAMjB,EAAIC,YAQ7BO,EAAYL,KAQhB,UACI,uBAAOD,QAAQ,WAAf,wBACA,uBAAOf,UAAQ,EAACpB,KAAK,OAAOvB,UAAU,eAAeK,KAAK,WACtDU,SAAUqC,EACVtC,YAAY,kBACZF,MAAOmD,EAASH,WACpB,uBAAOF,QAAQ,QAAf,qBACA,uBAAOf,UAAQ,EAACpB,KAAK,QAAQvB,UAAU,eAAeK,KAAK,QACvDU,SAAUqC,EACVtC,YAAY,mBACZF,MAAOmD,EAAShB,QACpB,uBAAOW,QAAQ,OAAf,wBACA,uBAAOf,UAAQ,EAACpB,KAAK,WAAWvB,UAAU,eAAeK,KAAK,WAC1DU,SAAUqC,EACVtC,YAAY,sBACZF,MAAOmD,EAASf,WACpB,uBAAOU,QAAQ,SAAf,+BACA,uBAAOf,UAAQ,EAACpB,KAAK,WAAWvB,UAAU,eAAeK,KAAK,YAC1DU,SAAUqC,EACVtC,YAAY,uBACZF,MAAOmD,EAASF,YAEZE,EAASf,WAAae,EAASF,UAAY,KAAO,qBAAK7D,UAAU,cAAf,wCAE1D,wBAAQA,UAAU,4BAA4BuB,KAAK,SAAnD,yBCdGmD,EA/CC,SAAAtE,GAAU,IAEfuE,EAC6FvE,EAD7FuE,SAAUC,EACmFxE,EADnFwE,aAAcC,EACqEzE,EADrEyE,UAAWC,EAC0D1E,EAD1D0E,QAASC,EACiD3E,EADjD2E,YAAazD,EACoClB,EADpCkB,OAAQ0D,EAC4B5E,EAD5B4E,eAAgBC,EACY7E,EADZ6E,KAAMC,EACM9E,EADN8E,aAC1FC,EAAgG/E,EAAhG+E,WAAYC,EAAoFhF,EAApFgF,WAAYC,EAAwEjF,EAAxEiF,gBAAiBC,EAAuDlF,EAAvDkF,QAASC,EAA8CnF,EAA9CmF,WAAYC,EAAkCpF,EAAlCoF,cAAeC,EAAmBrF,EAAnBqF,gBAEjF,OACI,mCAEQd,EACA,qCACI,cAAC,EAAD,CAAWlE,KAAMmE,EAAclE,KAAMmE,IACrC,sBAAK7E,UAAU,mBAAf,UACI,cAAC,EAAD,CAAaY,MAAOkE,EAASjE,SAAUkE,IACvC,cAAC,EAAD,CAAkBzD,OAAQA,EAAQG,SAAUuD,OAEhD,cAAC,EAAD,CAAUjF,SAAUkF,EAAM/C,MAAOgD,EAAcvD,SAAWwD,EACtDvD,aAAcwD,EAAYvD,kBAAmBwD,IACjD,cAAC,EAAD,CAAa3C,MAAO4C,OAGxB,qCACI,2CAEmB,UAAfC,EACA,qCACA,cAAC,EAAD,IACA,sBAAKvF,UAAU,aAAf,4DAA2E,sBAAMA,UAAU,aACvFO,QAAS,kBAAMiF,EAAc,aAD0C,qBAE3E,sBAAKxF,UAAU,aAAf,uCAAsD,sBAAMA,UAAU,aAClEO,QAASkF,EADyC,mBACZ,uBAD1C,uEAKA,qCACA,cAAC,EAAD,CAAclB,WAAY,kBAAMiB,EAAc,YAC9C,sBAAKxF,UAAU,aAAf,yCAAwD,sBAAMA,UAAU,aACpEO,QAAS,kBAAMiF,EAAc,UADuB,uBAEpD,sBAAKxF,UAAU,aAAf,oEAAmF,uBAAnF,oFC8Hb0F,EA7JH,WAER,IAAI5C,EAAO5D,EAASS,OAAOwE,aAAe,KAF5B,EAMY7B,mBAAS,IANrB,mBAMPJ,EANO,KAMAyD,EANA,OAQgBrD,mBAAS,IARzB,mBAQPwC,EARO,KAQEc,EARF,OAUctD,mBAAS,OAVvB,mBAUPhB,EAVO,KAUCuE,EAVD,OAYkBvD,oBAAS,GAZ3B,mBAYPqC,EAZO,KAYGmB,EAZH,OAcUxD,oBAAS,GAdnB,mBAcP2C,EAdO,KAcDc,EAdC,OAgBsBzD,mBAAS,SAhB/B,mBAgBPiD,EAhBO,KAgBKC,EAhBL,KAkBdQ,qBAAW,WAEPpG,EAAGqG,WAAW,SAASC,MAAM5C,MAAK,SAAA6C,GAC9B,IAAMC,ECpCY,SAAAD,GAC1B,IAAIlC,EAAM,GAOV,OANAkC,EAASE,SAAQ,SAAAC,GACbrC,EAAKsC,KAAL,2BACOD,EAAIrC,QADX,IAEIzC,GAAI8E,EAAI9E,SAGTyC,ED4BeuC,CAAeL,GAC7BR,EAASS,MAGZ7C,OAAO,SAAAC,GAAG,OAAIgB,QAAQC,MAAMjB,EAAIC,cAElC,IAIHvE,EAASS,OAAO8G,oBAAoB,SAAAC,GAC5BA,GAA0B,UAAfnB,GACXzC,EAAO5D,EAASS,OAAOwE,YACvB2B,GAAY,IAIZA,GAAY,MAKpB,IAWMa,EAAgB,SAACzF,GACnB,MAAO,CACHA,QACAY,WAAW,EACXpB,MAAM,EACNkG,MAAO9D,EAAK+D,IACZrF,IAAmB,IAAdsF,KAAKC,UAAoBC,aAIhC1B,EAAO,uCAAG,WAAOpE,GAAP,eAAA+F,EAAA,6DACNC,EAAUP,EAAczF,GADlB,SAENtB,EAAGqG,WAAW,SAASK,IAAIY,EAAQ1F,IAAI2F,IAAID,GAFrC,OAGZvB,GAAS,SAAAzD,GAAK,4BAASA,GAAT,CAAgBgF,OAHlB,2CAAH,sDAMP/B,EAAU,uCAAG,WAAM3D,GAAN,iBAAAyF,EAAA,0DACXG,OAAOC,QAAQ,8CADJ,gCAELzH,EAAG0G,IAAH,gBAAgB9E,IAAM8F,SAFjB,OAGLC,EAAMrF,EAAMsF,WAAU,SAAArF,GAAI,OAAIA,EAAKX,KAAOA,KAC1CiG,EAJK,sBAIUvF,EAAMwF,MAAM,EAAEH,IAJxB,YAIiCrF,EAAMwF,MAAMH,EAAM,KAC9D5B,EAAS8B,GALE,2CAAH,sDASVE,EAAY,uCAAG,WAAOC,EAAOpG,EAAIqG,GAAlB,qBAAAZ,EAAA,6DACPa,EAAUF,EAAMG,MAAK,SAAA5F,GAAI,OAAIA,EAAKX,KAAOA,KADlC,SAGP5B,EAAG0G,IAAH,gBAAgB9E,IAAMwG,OAAtB,eACDH,GAAcC,EAAQD,KACpB,SAAApD,GACC,MAAM,IAAIwD,MAAMxD,MANX,OASP8C,EAAMK,EAAMJ,WAAU,SAAArF,GAAI,OAAIA,EAAKX,KAAOA,KAC1C0F,EAVO,2BAWNhF,EAAMqF,IAXA,kBAYRM,GAAcC,EAAQD,KAErBJ,EAdO,sBAcQvF,EAAMwF,MAAM,EAAGH,IAdvB,CAc6BL,GAd7B,YAcyChF,EAAMwF,MAAMH,EAAM,KACxE5B,EAAS8B,GAfI,2CAAH,0DAkCZnH,EAAY,uCAAG,sBAAA2G,EAAA,sEACX/H,EAASS,OAAOuI,UADL,2CAAH,qDASZhD,EAAehD,GAASA,EAAMZ,QAAO,SAAAa,GAAI,OAAIW,GAAQX,EAAKyE,QAAU9D,EAAK+D,OAClDvF,QAAO,SAAAa,GAAI,OAAIA,EAAKjB,MAAMiH,cAAcC,QAAQtD,EAAQqD,gBAAkB,KAC1E7G,QAAO,SAAAa,GACJ,MAAe,SAAXb,GACqB,IAAda,EAAKzB,KAEI,WAAXY,GACgB,IAAda,EAAKzB,KAEJyB,KAGtCkG,EAAYnG,EAAMZ,QAAO,SAAAa,GAAI,OAAIA,EAAKyE,QAAU9D,KAChD+B,EAAYwD,EAAU/G,QAAO,SAAAgH,GAAE,OAAgB,IAAZA,EAAG5H,QAAe6H,OAGrDC,EAAe,CACjB7D,WAAUC,aAHOyD,EAAUE,OAAS1D,EAGZA,YAAWC,UAASC,YAlC5B,SAACnE,GACjBgF,EAAWhF,IAiC8CU,SAAQ0D,eA9B9C,SAACyD,GACpB5C,EAAU4C,IA6BuExD,OAAMC,eACvFC,aAAYC,WA3CG,SAAA5D,GACfmG,EAAazF,EAAOV,EAAI,SA0CA6D,gBAvCJ,SAAA7D,GACpBmG,EAAazF,EAAOV,EAAI,cAsCiB8D,UAASC,aAAYC,gBAAeC,gBAjGzD,WACpBvG,EAASS,OAAO0D,2BAA2B,iBAAkB,WAC5DC,MAAM,WACHwC,GAAY,GACZtB,QAAQkE,IAAI5F,MAEfS,OAAM,SAAAC,GAAG,OAAIgB,QAAQC,MAAMjB,EAAIC,cA8FpC,OACI,sBAAKzD,UAAWiF,EAAO,oBAAsB,WAA7C,UACKN,GAAY,cAAC,EAAD,CAAWtE,KAAMyC,EAAKuB,YAAa/D,aAAcA,IAC9D,sBAAKN,UAAU,qDAAf,UACI,uBAAOA,UAAU,uBAAuB0D,QAAQ,gBAAhD,uBACA,uBAAOnC,KAAK,WAAWvB,UAAU,uBAAuBwB,GAAG,gBACvDZ,MAAOqE,EAAMlE,SAhCV,WACRgF,GAAPd,SAiCI,cAAC,EAAD,eAAauD,IACb,cAAC,EAAD,CAAQzI,SAAUkF,Q,MElK9B0D,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.1ae995f8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDwUxxk_ce9eeG2OCgpHJnXB63LqRarWvk\",\r\n    authDomain: \"todo-app-c1a38.firebaseapp.com\",\r\n    databaseURL: \"https://todo-app-c1a38-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"todo-app-c1a38\",\r\n    storageBucket: \"todo-app-c1a38.appspot.com\",\r\n    messagingSenderId: \"449895565577\",\r\n    appId: \"1:449895565577:web:5c9aad265847e3de21abd8\"\r\n  };\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.auth(); // initializing authentcation\r\n\r\nexport const db = firebase.firestore(); // now our db is an instance of firestore\r\n\r\nexport default firebase;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer = ({darkmode}) => {\r\n    return(\r\n        <div className={darkmode ? 'footer darkmode': 'footer'}>\r\n            <div className=\"footer_social_title\">Find us on social media:</div>\r\n                <div className=\"footer_social_icons\">\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-facebook-square\"></i></a>\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-linkedin-square\"></i></a>\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-github-square\"></i></a>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './user-panel.scss';\r\n\r\nconst UserPanel = (props) => {\r\n\r\n    const {name, handleLogOut} = props;\r\n    \r\n    return(\r\n        <div className=\"user-panel d-flex\">\r\n            <div className=\"greeting mr-2\">Hello, {name || 'Guest'}</div> \r\n            <button className=\"btn btn-outline-secondary logout\" onClick={handleLogOut}>Log out</button>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPanel;","import React from 'react';\r\nimport './app-header.scss';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>ToDo List</h1>\r\n      <h2>{done} done, {toDo} pending</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './search-panel.scss';\r\n\r\nconst SearchPanel = ({value, onSearch}) => {\r\n    return <input className=\"form-control search-input\" placeholder=\"Search\" \r\n    onChange={(e) => onSearch(e.target.value)}\r\n    value={value}/>\r\n};\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nconst ItemStatusFilter = (props) => {\r\n\r\n    const buttons = [\r\n    {name: \"all\", label: \"All\"},\r\n    {name: \"active\", label: \"Pending\"},\r\n    {name: \"done\", label: \"Done\"}\r\n  ];\r\n  \r\n  return (\r\n    <div className=\"btn-group\">\r\n      {\r\n        buttons.map(btn => {\r\n          const isActive = props.filter === btn.name;\r\n          const btnClass = isActive ? \"btn btn-info\" : \"btn btn-outline-secondary\";\r\n          return(\r\n            <button key={btn.name} type=\"button\" id={btn.name}\r\n            className={btnClass} onClick={(e) => {props.onSwitch(e.target.id)}}>{btn.label}</button>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemStatusFilter;","import React from 'react';\r\nimport './todo-list-item.scss';\r\n\r\nconst TodoListItem = (props) => {\r\n \r\n    const {label, onDelete, onToggleDone, onToggleImportant, important, done, darkmode} = props;\r\n    \r\n    let itemClass = darkmode ? 'todo-list-item darkmode' : 'todo-list-item';\r\n    \r\n    if (done) {\r\n      itemClass += ' done'\r\n    }\r\n    if (important) {\r\n      itemClass += ' important'\r\n    }\r\n\r\n    const btnClass = important ? \"btn btn-outline-danger btn-sm float-right mr-2 active\" : \"btn btn-outline-danger btn-sm float-right mr-2\";\r\n  \r\n    return (\r\n      <div className={itemClass} data-todoitem>\r\n        <div\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </div>\r\n\r\n        <div className=\"todo-btn-group\">\r\n          <button type=\"button\"\r\n                  className={darkmode ? btnClass+' darkmode' : btnClass}\r\n                  onClick={onToggleImportant} >\r\n            <i className=\"fa fa-exclamation\" />\r\n          </button>\r\n          <button type=\"button\"\r\n                  className=\"btn btn-outline-secondary btn-sm float-right\"\r\n                  onClick={onDelete}>\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n          \r\n        </div>\r\n      \r\n      </div>\r\n    );  \r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.scss';\r\n\r\nconst TodoList = ({items, onDelete, onToggleDone, onToggleImportant, darkmode}) => {\r\n\r\n    return(\r\n        <ul className=\"list-group todo-list\">\r\n            {\r\n                items.map(item => {\r\n\r\n                    const {id,...itemProps} = item;\r\n                    return(\r\n                        <li className={darkmode ? \"list-group-item darkmode\" : \"list-group-item\"} key={id}>\r\n                            <TodoListItem {...itemProps} onDelete={() => onDelete(id)}\r\n                                onToggleImportant= {() => onToggleImportant(id)}\r\n                                onToggleDone= {() => onToggleDone(id)}\r\n                                darkmode={darkmode}/>\r\n                            </li> //{...item} взяли все ключи item и записали их в одноименные атрибуты\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {useState} from 'react';\r\nimport './item-add-form.scss';\r\n\r\nconst ItemAddForm = (props) => {\r\n\r\n    const [label, setLabel] = useState('');\r\n\r\n    const onLabelChange = (e) => {\r\n        setLabel(e.target.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.onAdd(label);\r\n        setLabel('');  \r\n    }\r\n\r\n    return(\r\n        <form className=\"item-add-form d-flex\" onSubmit={onSubmit}>\r\n            <input required type=\"text\" className=\"form-control\" \r\n                onChange={onLabelChange} \r\n                placeholder=\"What needs to be done?\"\r\n                value={label} />\r\n            <button className=\"btn btn-outline-secondary\">Add item</button>\r\n        </form>\r\n    )  \r\n};\r\n\r\nexport default ItemAddForm;","import React, {useState} from 'react';\r\nimport './login.scss';\r\nimport firebase from '../../firebase.config';\r\n\r\nconst initialLoginState = {\r\n    loginError: '',\r\n    user: {\r\n        email: '',\r\n        password: ''\r\n    }\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const [loginState, setLoginState] = useState(initialLoginState);\r\n    const onLabelChange = (e) => {\r\n        setLoginState(loginState => ({\r\n            ...loginState,\r\n            user: {\r\n                ...loginState.user,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        firebase.auth().signInWithEmailAndPassword(loginState.user.email, loginState.user.password)\r\n        .then(() => {\r\n            setLoginState(initialLoginState);      \r\n        })\r\n        .catch(err => setLoginState(loginState => ({\r\n            ...loginState,\r\n            loginError: err.message\r\n        })));  \r\n    }\r\n\r\n    return(\r\n        <form className=\"login-form d-flex\" onSubmit={onSubmit}>\r\n            <label htmlFor=\"email\">Email: </label>\r\n             <input required type=\"email\" className=\"form-control\" name=\"email\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your email\"\r\n                value={loginState.email} />\r\n            <label htmlFor=\"password\">Password: </label>\r\n            <input required type=\"password\" className=\"form-control\" name=\"password\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your password\"\r\n                value={loginState.password} />\r\n                {\r\n                loginState.loginError ? <div className=\"err-message\">{loginState.loginError}</div> : null\r\n                }\r\n            <button className=\"btn btn-outline-secondary\" type=\"submit\">Login</button>     \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, {useState} from 'react';\r\nimport './register.scss';\r\nimport firebase from '../../firebase.config';\r\n\r\nconst initialRegState = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n}\r\n\r\nconst RegisterForm = (props) => {\r\n\r\n    const [regState, setRegState] = useState(initialRegState);\r\n\r\n    const onLabelChange = (e) => {\r\n        setRegState({\r\n            ...regState,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleRegister = (data) => {\r\n        firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n        .then(() => firebase.auth().currentUser.updateProfile({\r\n            displayName: data.username,\r\n            photoURL: null\r\n        }))\r\n        //.then( () => firebase.auth().currentUser.sendEmailVerification().then(() => console.log('Email sent')) )\r\n        .then( () => props.onRegister())\r\n        .catch (err => console.error(err.message))\r\n    \r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (regState.password === regState.password2) {\r\n            handleRegister(regState);\r\n            setRegState(initialRegState); \r\n        }\r\n        else return;\r\n        \r\n    }\r\n\r\n    return(\r\n\r\n        <form className=\"register-form d-flex\" onSubmit={onSubmit}>\r\n            <label htmlFor=\"username\">Username: </label>\r\n            <input required type=\"text\" className=\"form-control\" name=\"username\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your name\"\r\n                value={regState.username} />\r\n            <label htmlFor=\"email\">Email: </label>\r\n            <input required type=\"email\" className=\"form-control\" name=\"email\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your email\"\r\n                value={regState.email} />\r\n            <label htmlFor=\"pass\">Password: </label>\r\n            <input required type=\"password\" className=\"form-control\" name=\"password\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your password\"\r\n                value={regState.password} />\r\n            <label htmlFor=\"pass-2\">Repeat password: </label>\r\n            <input required type=\"password\" className=\"form-control\" name=\"password2\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Repeat your password\"\r\n                value={regState.password2} />\r\n                {\r\n                    regState.password === regState.password2 ? null : <div className=\"err-message\">Passwords don´t match!!</div>\r\n                }\r\n            <button className=\"btn btn-outline-secondary\" type=\"submit\">Sign up</button>\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport ItemAddForm from '../item-add-form/item-add-form';\r\nimport LoginForm from '../login/login';\r\nimport RegisterForm from '../register/register';\r\n\r\nconst Content = props => {\r\n\r\n    const{ loggedIn, pendingCount, doneCount, pattern, searchItems, filter, onSwitchFilter, dark, visibleItems, \r\n        deleteItem, toggleDone, toggleImportant, addItem, signInType, setSignInType, guestUserSignIn} = props;\r\n\r\n    return(\r\n        <>\r\n            {\r\n                loggedIn ? \r\n                <>\r\n                    <AppHeader toDo={pendingCount} done={doneCount} />\r\n                    <div className=\"top-panel d-flex\">\r\n                        <SearchPanel value={pattern} onSearch={searchItems}/>\r\n                        <ItemStatusFilter filter={filter} onSwitch={onSwitchFilter}/>\r\n                    </div>\r\n                    <TodoList darkmode={dark} items={visibleItems} onDelete={ deleteItem} \r\n                        onToggleDone={toggleDone} onToggleImportant={toggleImportant}/>\r\n                    <ItemAddForm onAdd={addItem}/> \r\n                </> \r\n                : \r\n                <>\r\n                    <h1>ToDo List</h1>\r\n                    {\r\n                        signInType === 'login' ? \r\n                        <>\r\n                        <LoginForm />\r\n                        <div className=\"descr mt-2\">If you are not registered yet, you can sign up <span className=\"login-span\" \r\n                            onClick={() => setSignInType('register')}>here</span></div>\r\n                        <div className=\"descr mt-2\">You can also sign-in as a <span className=\"login-span\"\r\n                            onClick={guestUserSignIn}>guest</span><br/>\r\n                            If you choose to sign in as a guest, your data will be public!</div>\r\n                        </>\r\n                        : \r\n                        <>\r\n                        <RegisterForm onRegister={() => setSignInType('login')} />\r\n                        <div className=\"descr mt-2\">Already registered? Please  <span className=\"login-span\" \r\n                            onClick={() => setSignInType('login')}>log in</span></div>\r\n                            <div className=\"descr mt-2\">For demo purposes email verification has been disabled.<br/> \r\n                            You can register with an imaginary email (for example, test@test.com)</div>\r\n                        </>\r\n                    } \r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content;","import React, {useEffect, useState} from 'react';\r\n//import SearchPanel from '../search-panel/search-panel';\r\n//import TodoList from '../todo-list/todo-list';\r\n//import AppHeader from '../app-header/app-header';\r\n//import ItemStatusFilter from '../item-status-filter/item-status-filter';\r\n//import ItemAddForm from '../item-add-form/item-add-form';\r\nimport './app.scss';\r\nimport firebase, { db } from '../../firebase.config';\r\nimport Footer from '../footer/footer';\r\nimport { firebaseLooper } from '../../utils/tools';\r\n//import RegisterForm from '../register/register';\r\n//import LoginForm from '../login/login';\r\nimport UserPanel from '../user-panel/user-panel';\r\nimport Content from '../content/content';\r\n\r\nconst App = () => {\r\n\r\n    let user = firebase.auth().currentUser || null;\r\n\r\n    //==============State hooks====================================================\r\n\r\n    const [items, setItems] = useState([]);\r\n     \r\n    const [pattern, setPattern] = useState(''); //search query\r\n\r\n    const [filter, setFilter] = useState('all');\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    const [dark, setDark] = useState(false);\r\n\r\n    const [signInType, setSignInType] = useState('login');\r\n\r\n    useEffect( () => {\r\n\r\n        db.collection('items').get().then(snapshot => {\r\n            const todos = firebaseLooper(snapshot);\r\n            setItems(todos);\r\n            //console.log('useEffect ran');\r\n        })\r\n        .catch( err => console.error(err.message));\r\n\r\n    }, []);\r\n\r\n    //====Firebase tools====================================\r\n\r\n    firebase.auth().onAuthStateChanged( userObj => {\r\n        if (userObj && signInType === 'login') {\r\n            user = firebase.auth().currentUser;\r\n            setLoggedIn(true);\r\n            //console.log(`${user.displayName} logged in`);\r\n        }\r\n        else {\r\n            setLoggedIn(false);\r\n            //console.log('No authorized users online');\r\n        }\r\n    });\r\n\r\n    const guestUserSignIn = () => {\r\n        firebase.auth().signInWithEmailAndPassword('guest@test.com', 'test123')\r\n        .then( () => {\r\n            setLoggedIn(true);\r\n            console.log(user);\r\n        })\r\n        .catch(err => console.error(err.message));\r\n    }\r\n\r\n    //==============Methods ====================================================\r\n\r\n    const createNewItem = (label) => {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            owner: user.uid,\r\n            id: (Math.random()*100000000).toString()\r\n        }\r\n    };\r\n\r\n    const addItem = async (label) => { \r\n        const newItem = createNewItem(label);\r\n        await db.collection('items').doc(newItem.id).set(newItem);\r\n        setItems(items => ([...items, newItem]));\r\n    };\r\n\r\n    const deleteItem = async id => { \r\n        if (window.confirm('Are you sure you want to delete this item?')) {\r\n            await db.doc(`items/${id}`).delete();\r\n            const idX = items.findIndex(item => item.id === id);\r\n            const newArray = [...items.slice(0,idX), ...items.slice(idX + 1)];\r\n            setItems(newArray);\r\n        }      \r\n    };\r\n\r\n    const toggleStatus = async (array, id, statusName) => { \r\n            const oldItem = array.find(item => item.id === id);\r\n            \r\n            await db.doc(`items/${id}`).update({\r\n                [statusName]: !oldItem[statusName]\r\n                }, error => {\r\n                    throw new Error(error);\r\n                    }\r\n                );\r\n            const idX = array.findIndex(item => item.id === id);\r\n            const newItem = {\r\n                ...items[idX],\r\n                [statusName]: !oldItem[statusName]\r\n            };\r\n            const newArray = [...items.slice(0, idX), newItem, ...items.slice(idX + 1)];\r\n            setItems(newArray);    \r\n    };\r\n\r\n    const toggleDone = id => {  \r\n        toggleStatus(items, id, 'done');\r\n    };\r\n\r\n    const toggleImportant = id => { \r\n        toggleStatus(items, id, 'important');\r\n    };\r\n\r\n    const searchItems = (value) => { \r\n        setPattern(value);\r\n    };\r\n\r\n    const onSwitchFilter = (filterName) => { \r\n        setFilter(filterName);\r\n    }\r\n\r\n    const handleLogOut = async () => {\r\n        await firebase.auth().signOut();\r\n    }\r\n\r\n    const toggleDark = () => {\r\n        dark ? setDark(false) : setDark(true);\r\n    };\r\n\r\n    // ===== Rendering options ===============\r\n    const visibleItems = items && items.filter(item => user && item.owner === user.uid)\r\n                                .filter(item => item.label.toLowerCase().indexOf(pattern.toLowerCase()) > -1)\r\n                                .filter(item => {\r\n                                    if (filter === 'done') {\r\n                                        return item.done === true\r\n                                    }\r\n                                    else if (filter === 'active') {\r\n                                        return item.done === false\r\n                                    }\r\n                                    else return item\r\n                                });\r\n\r\n    const userItems = items.filter(item => item.owner === user);\r\n    const doneCount = userItems.filter(el => el.done === true).length;\r\n    const pendingCount = userItems.length - doneCount;\r\n\r\n    const contentProps = {\r\n        loggedIn, pendingCount, doneCount, pattern, searchItems, filter, onSwitchFilter, dark, visibleItems, \r\n        deleteItem, toggleDone, toggleImportant, addItem, signInType, setSignInType, guestUserSignIn\r\n    }\r\n\r\n    return(\r\n        <div className={dark ? \"todo-app darkmode\" : \"todo-app\"}>\r\n            {loggedIn && <UserPanel name={user.displayName} handleLogOut={handleLogOut} /> }\r\n            <div className=\"dark-toggle custom-control custom-switch mt-3 mb-2\">\r\n                <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Dark mode</label>\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" \r\n                    value={dark} onChange={toggleDark}/>\r\n            </div>\r\n            <Content {...contentProps} />\r\n            <Footer darkmode={dark} />\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default App;","export const firebaseLooper = snapshot => {\r\n    let data= [];\r\n    snapshot.forEach(doc => {\r\n        data.push({\r\n            ...doc.data(),\r\n            id: doc.id //custom id generated by Firebase to be mapped as a property\r\n        })\r\n    })\r\n    return data;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport 'bootswatch/dist/sketchy/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}