{"version":3,"sources":["firebase.config.js","components/footer/footer.js","components/user-panel/user-panel.js","components/app-header/app-header.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.js","components/login/login.js","components/register/register.js","components/content/content.js","components/app/app.js","utils/tools.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","Footer","darkmode","className","href","target","UserPanel","props","name","handleLogOut","onClick","AppHeader","toDo","done","SearchPanel","value","onSearch","placeholder","onChange","e","ItemStatusFilter","label","map","btn","btnClass","filter","type","id","onSwitch","TodoListItem","onDelete","onToggleDone","onToggleImportant","important","itemClass","data-todoitem","TodoList","items","item","itemProps","ItemAddForm","useState","setLabel","onSubmit","preventDefault","onAdd","required","initialLoginState","isResetEmailSent","loginError","user","email","password","LoginForm","loginState","setLoginState","onLabelChange","signInWithEmailAndPassword","then","catch","err","message","htmlFor","sendPasswordResetEmail","initialRegState","username","password2","RegisterForm","regState","setRegState","data","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","photoURL","sendEmailVerification","console","log","onRegister","error","Content","loggedIn","pendingCount","doneCount","pattern","searchItems","onSwitchFilter","dark","visibleItems","deleteItem","toggleDone","toggleImportant","addItem","signInType","setSignInType","guestUserSignIn","App","setItems","setPattern","setFilter","setLoggedIn","setDark","useEffect","collection","get","snapshot","todos","forEach","doc","push","firebaseLooper","onAuthStateChanged","userObj","createNewItem","owner","uid","Math","random","toString","a","newItem","set","window","confirm","delete","idX","findIndex","newArray","slice","toggleStatus","array","statusName","oldItem","find","update","Error","signOut","toLowerCase","indexOf","userItems","el","length","contentProps","filterName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2db02118.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDwUxxk_ce9eeG2OCgpHJnXB63LqRarWvk\",\r\n    authDomain: \"todo-app-c1a38.firebaseapp.com\",\r\n    databaseURL: \"https://todo-app-c1a38-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"todo-app-c1a38\",\r\n    storageBucket: \"todo-app-c1a38.appspot.com\",\r\n    messagingSenderId: \"449895565577\",\r\n    appId: \"1:449895565577:web:5c9aad265847e3de21abd8\"\r\n  };\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.auth(); // initializing authentcation\r\n\r\nexport const db = firebase.firestore(); // now our db is an instance of firestore\r\n\r\nexport default firebase;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer = ({darkmode}) => {\r\n    return(\r\n        <div className={darkmode ? 'footer darkmode': 'footer'}>\r\n            <div className=\"footer_social_title\">Find us on social media:</div>\r\n                <div className=\"footer_social_icons\">\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-facebook-square\"></i></a>\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-linkedin-square\"></i></a>\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-github-square\"></i></a>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './user-panel.scss';\r\n\r\nconst UserPanel = (props) => {\r\n\r\n    const {name, handleLogOut} = props;\r\n    \r\n    return(\r\n        <div className=\"user-panel d-flex\">\r\n            <div className=\"greeting mr-2\">Hello, {name || 'Guest'}</div> \r\n            <button className=\"btn btn-outline-secondary logout\" onClick={handleLogOut}>Log out</button>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPanel;","import React from 'react';\r\nimport './app-header.scss';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>ToDo List</h1>\r\n      <h2>{done} done, {toDo} pending</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './search-panel.scss';\r\n\r\nconst SearchPanel = ({value, onSearch}) => {\r\n    return <input className=\"form-control search-input\" placeholder=\"Search\" \r\n    onChange={(e) => onSearch(e.target.value)}\r\n    value={value}/>\r\n};\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nconst ItemStatusFilter = (props) => {\r\n\r\n    const buttons = [\r\n    {name: \"all\", label: \"All\"},\r\n    {name: \"active\", label: \"Pending\"},\r\n    {name: \"done\", label: \"Done\"}\r\n  ];\r\n  \r\n  return (\r\n    <div className=\"btn-group\">\r\n      {\r\n        buttons.map(btn => {\r\n          const isActive = props.filter === btn.name;\r\n          const btnClass = isActive ? \"btn btn-info\" : \"btn btn-outline-secondary\";\r\n          return(\r\n            <button key={btn.name} type=\"button\" id={btn.name}\r\n            className={btnClass} onClick={(e) => {props.onSwitch(e.target.id)}}>{btn.label}</button>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemStatusFilter;","import React from 'react';\r\nimport './todo-list-item.scss';\r\n\r\nconst TodoListItem = (props) => {\r\n \r\n    const {label, onDelete, onToggleDone, onToggleImportant, important, done, darkmode} = props;\r\n    \r\n    let itemClass = darkmode ? 'todo-list-item darkmode' : 'todo-list-item';\r\n    \r\n    if (done) {\r\n      itemClass += ' done'\r\n    }\r\n    if (important) {\r\n      itemClass += ' important'\r\n    }\r\n\r\n    const btnClass = important ? \"btn btn-outline-danger btn-sm float-right mr-2 active\" : \"btn btn-outline-danger btn-sm float-right mr-2\";\r\n  \r\n    return (\r\n      <div className={itemClass} data-todoitem>\r\n        <div\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </div>\r\n\r\n        <div className=\"todo-btn-group\">\r\n          <button type=\"button\"\r\n                  className={darkmode ? btnClass+' darkmode' : btnClass}\r\n                  onClick={onToggleImportant} >\r\n            <i className=\"fa fa-exclamation\" />\r\n          </button>\r\n          <button type=\"button\"\r\n                  className=\"btn btn-outline-secondary btn-sm float-right\"\r\n                  onClick={onDelete}>\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n          \r\n        </div>\r\n      \r\n      </div>\r\n    );  \r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.scss';\r\n\r\nconst TodoList = ({items, onDelete, onToggleDone, onToggleImportant, darkmode}) => {\r\n\r\n    return(\r\n        <ul className=\"list-group todo-list\">\r\n            {\r\n                items.map(item => {\r\n\r\n                    const {id,...itemProps} = item;\r\n                    return(\r\n                        <li className={darkmode ? \"list-group-item darkmode\" : \"list-group-item\"} key={id}>\r\n                            <TodoListItem {...itemProps} onDelete={() => onDelete(id)}\r\n                                onToggleImportant= {() => onToggleImportant(id)}\r\n                                onToggleDone= {() => onToggleDone(id)}\r\n                                darkmode={darkmode}/>\r\n                            </li> //{...item} взяли все ключи item и записали их в одноименные атрибуты\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {useState} from 'react';\r\nimport './item-add-form.scss';\r\n\r\nconst ItemAddForm = (props) => {\r\n\r\n    const [label, setLabel] = useState('');\r\n\r\n    const onLabelChange = (e) => {\r\n        setLabel(e.target.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.onAdd(label);\r\n        setLabel('');  \r\n    }\r\n\r\n    return(\r\n        <form className=\"item-add-form d-flex\" onSubmit={onSubmit}>\r\n            <input required type=\"text\" className=\"form-control\" \r\n                onChange={onLabelChange} \r\n                placeholder=\"What needs to be done?\"\r\n                value={label} />\r\n            <button className=\"btn btn-outline-secondary\">Add item</button>\r\n        </form>\r\n    )  \r\n};\r\n\r\nexport default ItemAddForm;","import React, {useState} from 'react';\r\nimport './login.scss';\r\nimport firebase from '../../firebase.config';\r\n\r\nconst initialLoginState = {\r\n    isResetEmailSent: false,\r\n    loginError: '',\r\n    user: {\r\n        email: '',\r\n        password: ''\r\n    }\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const [loginState, setLoginState] = useState(initialLoginState);\r\n    const onLabelChange = (e) => {\r\n        setLoginState(loginState => ({\r\n            ...loginState,\r\n            user: {\r\n                ...loginState.user,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        firebase.auth().signInWithEmailAndPassword(loginState.user.email, loginState.user.password)\r\n        .then(() => {\r\n            setLoginState(initialLoginState);      \r\n        })\r\n        .catch(err => setLoginState(loginState => ({\r\n            ...loginState,\r\n            loginError: err.message\r\n        })));  \r\n    }\r\n\r\n    const resetPassword = () => {\r\n        firebase.auth().sendPasswordResetEmail(loginState.user.email)\r\n        .then(() => setLoginState(loginState =>({\r\n            ...loginState,\r\n            isResetEmailSent: true\r\n        })))\r\n        .catch(err => setLoginState(loginState => ({\r\n            ...loginState,\r\n            loginError: err.message\r\n        })));\r\n    }\r\n\r\n    return(\r\n        <form className=\"login-form d-flex\" onSubmit={onSubmit}>\r\n            <label htmlFor=\"email\">Email: </label>\r\n             <input required type=\"email\" className=\"form-control\" name=\"email\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your email\"\r\n                value={loginState.email} />\r\n            <label htmlFor=\"password\">Password: </label>\r\n            <input required type=\"password\" className=\"form-control\" name=\"password\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your password\"\r\n                value={loginState.password} />\r\n                {\r\n                loginState.loginError ? <div className=\"err-message\">{loginState.loginError}</div> : null\r\n                }\r\n            \r\n            {\r\n                loginState.isResetEmailSent ? \r\n                <span className=\"login-span email-sent\">Password reset instructions have been sent to <span className=\"login-span\">{loginState.user.email}</span></span> : \r\n                <span className=\"login-span\" onClick={resetPassword}>Forgot your password?</span>\r\n            }\r\n            <button className=\"btn btn-outline-secondary\" type=\"submit\">Login</button>     \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, {useState} from 'react';\r\nimport './register.scss';\r\nimport firebase from '../../firebase.config';\r\n\r\nconst initialRegState = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n}\r\n\r\nconst RegisterForm = (props) => {\r\n\r\n    const [regState, setRegState] = useState(initialRegState);\r\n\r\n    const onLabelChange = (e) => {\r\n        setRegState({\r\n            ...regState,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleRegister = (data) => {\r\n        firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n        .then(() => firebase.auth().currentUser.updateProfile({\r\n            displayName: data.username,\r\n            photoURL: null\r\n        }))\r\n        .then( () => firebase.auth().currentUser.sendEmailVerification().then(() => console.log('Email sent')) )\r\n        .then( () => props.onRegister())\r\n        .catch (err => console.error(err.message))\r\n    \r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (regState.password === regState.password2) {\r\n            handleRegister(regState);\r\n            setRegState(initialRegState); \r\n        }\r\n        else return;\r\n    }\r\n\r\n    return(\r\n\r\n        <form className=\"register-form d-flex\" onSubmit={onSubmit}>\r\n            <label htmlFor=\"username\">Username: </label>\r\n            <input required type=\"text\" className=\"form-control\" name=\"username\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your name\"\r\n                value={regState.username} />\r\n            <label htmlFor=\"email\">Email: </label>\r\n            <input required type=\"email\" className=\"form-control\" name=\"email\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your email\"\r\n                value={regState.email} />\r\n            <label htmlFor=\"pass\">Password: </label>\r\n            <input required type=\"password\" className=\"form-control\" name=\"password\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your password\"\r\n                value={regState.password} />\r\n            <label htmlFor=\"pass-2\">Repeat password: </label>\r\n            <input required type=\"password\" className=\"form-control\" name=\"password2\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Repeat your password\"\r\n                value={regState.password2} />\r\n                {\r\n                    regState.password === regState.password2 ? null : <div className=\"err-message\">Passwords don´t match!!</div>\r\n                }\r\n            <button className=\"btn btn-outline-secondary\" type=\"submit\">Sign up</button>\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport './content.scss';\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport ItemAddForm from '../item-add-form/item-add-form';\r\nimport LoginForm from '../login/login';\r\nimport RegisterForm from '../register/register';\r\n\r\nconst Content = props => {\r\n\r\n    const{ loggedIn, pendingCount, doneCount, pattern, searchItems, filter, onSwitchFilter, dark, visibleItems, \r\n        deleteItem, toggleDone, toggleImportant, addItem, signInType, setSignInType, guestUserSignIn} = props;\r\n\r\n    return(\r\n        <>\r\n            {\r\n                loggedIn ? \r\n                <>\r\n                    <AppHeader toDo={pendingCount} done={doneCount} />\r\n                    <div className=\"top-panel d-flex\">\r\n                        <SearchPanel value={pattern} onSearch={searchItems}/>\r\n                        <ItemStatusFilter filter={filter} onSwitch={onSwitchFilter}/>\r\n                    </div>\r\n                    <TodoList darkmode={dark} items={visibleItems} onDelete={ deleteItem} \r\n                        onToggleDone={toggleDone} onToggleImportant={toggleImportant}/>\r\n                    <ItemAddForm onAdd={addItem}/> \r\n                </> \r\n                : \r\n                <>\r\n                    <h1>ToDo List</h1>\r\n                    {\r\n                        signInType === 'login' ? \r\n                        <>\r\n                        <LoginForm />\r\n                        <div className=\"descr mt-2\">If you are not registered yet, you can sign up <span className=\"login-span\" \r\n                            onClick={() => setSignInType('register')}>here</span></div>\r\n                        <div className=\"descr mt-2\">You can also sign-in as a <span className=\"login-span\"\r\n                            onClick={guestUserSignIn}>guest </span>\r\n                            (your data will be public)</div>\r\n                        </>\r\n                        : \r\n                        <>\r\n                        <RegisterForm onRegister={() => setSignInType('login')} />\r\n                        <div className=\"descr mt-2\">Already registered? Please  <span className=\"login-span\" \r\n                            onClick={() => setSignInType('login')}>log in</span></div>\r\n                            <div className=\"descr mt-2\">The app rules allow you sign up with an imaginary email (for example, test@test.com). \r\n                                <span className=\"warning-span\"> Please note that you won´t be able to reset your password by email in that case</span>\r\n                            </div>\r\n                        </>\r\n                    } \r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content;","import React, {useEffect, useState} from 'react';\r\nimport './app.scss';\r\nimport firebase, { db } from '../../firebase.config';\r\nimport Footer from '../footer/footer';\r\nimport { firebaseLooper } from '../../utils/tools';\r\nimport UserPanel from '../user-panel/user-panel';\r\nimport Content from '../content/content';\r\n\r\nconst App = () => {\r\n\r\n    let user = firebase.auth().currentUser || null;\r\n\r\n    //==============State hooks====================================================\r\n\r\n    const [items, setItems] = useState([]);\r\n     \r\n    const [pattern, setPattern] = useState(''); //search query\r\n\r\n    const [filter, setFilter] = useState('all');\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    const [dark, setDark] = useState(false);\r\n\r\n    const [signInType, setSignInType] = useState('login');\r\n\r\n    useEffect( () => {\r\n        db.collection('items').get().then(snapshot => {\r\n            const todos = firebaseLooper(snapshot);\r\n            setItems(todos);\r\n        })\r\n        .catch( err => console.error(err.message));\r\n    }, []);\r\n\r\n    //====Firebase tools====================================\r\n\r\n    firebase.auth().onAuthStateChanged( userObj => {\r\n        if (userObj && signInType === 'login') {\r\n            user = firebase.auth().currentUser;\r\n            setLoggedIn(true);\r\n        }\r\n        else {\r\n            setLoggedIn(false);\r\n        }\r\n    });\r\n\r\n    const guestUserSignIn = () => {\r\n        firebase.auth().signInWithEmailAndPassword('guest@test.com', 'test123')\r\n        .then( () => {\r\n            setLoggedIn(true);\r\n            console.log(user);\r\n        })\r\n        .catch(err => console.error(err.message));\r\n    }\r\n\r\n    //==============Methods ====================================================\r\n\r\n    const createNewItem = (label) => {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            owner: user.uid,\r\n            id: (Math.random()*100000000).toString()\r\n        }\r\n    };\r\n\r\n    const addItem = async (label) => { \r\n        const newItem = createNewItem(label);\r\n        await db.collection('items').doc(newItem.id).set(newItem);\r\n        setItems(items => ([...items, newItem]));\r\n    };\r\n\r\n    const deleteItem = async id => { \r\n        if (window.confirm('Are you sure you want to delete this item?')) {\r\n            await db.doc(`items/${id}`).delete();\r\n            const idX = items.findIndex(item => item.id === id);\r\n            const newArray = [...items.slice(0,idX), ...items.slice(idX + 1)];\r\n            setItems(newArray);\r\n        }      \r\n    };\r\n\r\n    const toggleStatus = async (array, id, statusName) => { \r\n            const oldItem = array.find(item => item.id === id);\r\n            \r\n            await db.doc(`items/${id}`).update({\r\n                [statusName]: !oldItem[statusName]\r\n                }, error => {\r\n                    throw new Error(error);\r\n                    }\r\n                );\r\n            const idX = array.findIndex(item => item.id === id);\r\n            const newItem = {\r\n                ...items[idX],\r\n                [statusName]: !oldItem[statusName]\r\n            };\r\n            const newArray = [...items.slice(0, idX), newItem, ...items.slice(idX + 1)];\r\n            setItems(newArray);    \r\n    };\r\n\r\n    const toggleDone = id => {  \r\n        toggleStatus(items, id, 'done');\r\n    };\r\n\r\n    const toggleImportant = id => { \r\n        toggleStatus(items, id, 'important');\r\n    };\r\n\r\n    const searchItems = (value) => { \r\n        setPattern(value);\r\n    };\r\n\r\n    const onSwitchFilter = (filterName) => { \r\n        setFilter(filterName);\r\n    }\r\n\r\n    const handleLogOut = async () => {\r\n        await firebase.auth().signOut();\r\n    }\r\n\r\n    const toggleDark = () => {\r\n        dark ? setDark(false) : setDark(true);\r\n    };\r\n\r\n    // ===== Rendering options ===============\r\n    const visibleItems = items && items.filter(item => user && item.owner === user.uid)\r\n                                .filter(item => item.label.toLowerCase().indexOf(pattern.toLowerCase()) > -1)\r\n                                .filter(item => {\r\n                                    if (filter === 'done') {\r\n                                        return item.done === true\r\n                                    }\r\n                                    else if (filter === 'active') {\r\n                                        return item.done === false\r\n                                    }\r\n                                    else return item\r\n                                });\r\n\r\n    const userItems = items.filter(item => item.owner === user);\r\n    const doneCount = userItems.filter(el => el.done === true).length;\r\n    const pendingCount = userItems.length - doneCount;\r\n\r\n    const contentProps = {\r\n        loggedIn, pendingCount, doneCount, pattern, searchItems, filter, onSwitchFilter, dark, visibleItems, \r\n        deleteItem, toggleDone, toggleImportant, addItem, signInType, setSignInType, guestUserSignIn\r\n    }\r\n\r\n    return(\r\n        <div className={dark ? \"todo-app darkmode\" : \"todo-app\"}>\r\n            {loggedIn && <UserPanel name={user.displayName} handleLogOut={handleLogOut} /> }\r\n            <div className=\"dark-toggle custom-control custom-switch mt-3 mb-2\">\r\n                <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Dark mode</label>\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" \r\n                    value={dark} onChange={toggleDark}/>\r\n            </div>\r\n            <Content {...contentProps} />\r\n            <Footer darkmode={dark} />\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default App;","export const firebaseLooper = snapshot => {\r\n    let data= [];\r\n    snapshot.forEach(doc => {\r\n        data.push({\r\n            ...doc.data(),\r\n            id: doc.id //custom id generated by Firebase to be mapped as a property\r\n        })\r\n    })\r\n    return data;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport 'bootswatch/dist/sketchy/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}