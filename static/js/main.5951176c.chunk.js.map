{"version":3,"sources":["components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/app-header/app-header.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","firebase.config.js","components/footer/footer.js","components/register/register.js","components/login/login.js","components/app/app.js","utils/tools.js","index.js"],"names":["SearchPanel","value","onSearch","className","placeholder","onChange","e","target","TodoListItem","props","label","onDelete","onToggleDone","onToggleImportant","important","done","darkmode","itemClass","btnClass","data-todoitem","onClick","type","TodoList","items","map","item","id","itemProps","AppHeader","toDo","ItemStatusFilter","name","btn","filter","onSwitch","ItemAddForm","useState","setLabel","onSubmit","preventDefault","onAdd","required","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","Footer","href","initialRegState","username","email","password","password2","RegisterForm","regState","setRegState","onLabelChange","data","createUserWithEmailAndPassword","then","currentUser","updateProfile","displayName","photoURL","onRegister","catch","err","console","error","message","htmlFor","initialLoginState","loginError","user","LoginForm","loginState","setLoginState","signInWithEmailAndPassword","App","setItems","pattern","setPattern","setFilter","loggedIn","setLoggedIn","dark","setDark","signInType","setSignInType","onAuthStateChanged","userObj","useEffect","collection","get","snapshot","todos","forEach","doc","push","firebaseLooper","createNewItem","owner","uid","Math","random","toString","addItem","a","newItem","set","deleteItem","window","confirm","delete","idX","findIndex","newArray","slice","toggleStatus","array","statusName","oldItem","find","update","Error","handleLogOut","signOut","visibleItems","toLowerCase","indexOf","userItems","doneCount","el","length","pendingCount","userPanel","list","filterName","ReactDOM","render","document","getElementById"],"mappings":"iZASeA,EANK,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACzB,OAAO,uBAAOC,UAAU,4BAA4BC,YAAY,SAChEC,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAON,QACnCA,MAAOA,K,QCsCIO,G,MAzCM,SAACC,GAAW,IAEtBC,EAA+ED,EAA/EC,MAAOC,EAAwEF,EAAxEE,SAAUC,EAA8DH,EAA9DG,aAAcC,EAAgDJ,EAAhDI,kBAAmBC,EAA6BL,EAA7BK,UAAWC,EAAkBN,EAAlBM,KAAMC,EAAYP,EAAZO,SAEtEC,EAAYD,EAAW,0BAA4B,iBAEnDD,IACFE,GAAa,SAEXH,IACFG,GAAa,cAGf,IAAMC,EAAWJ,EAAY,wDAA0D,iDAEvF,OACE,sBAAKX,UAAWc,EAAWE,iBAAA,EAA3B,UACE,qBACEhB,UAAU,uBACViB,QAASR,EAFX,SAGGF,IAGH,sBAAKP,UAAU,iBAAf,UACE,wBAAQkB,KAAK,SACLlB,UAAWa,EAAWE,EAAS,YAAcA,EAC7CE,QAASP,EAFjB,SAGE,mBAAGV,UAAU,wBAEf,wBAAQkB,KAAK,SACLlB,UAAU,+CACViB,QAAST,EAFjB,SAGE,mBAAGR,UAAU,4BCTVmB,G,MAtBE,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,MAAOZ,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,kBAAmBG,EAAc,EAAdA,SAEjE,OACI,oBAAIb,UAAU,uBAAd,SAEQoB,EAAMC,KAAI,SAAAC,GAAS,IAERC,EAAmBD,EAAnBC,GAAMC,EAFC,YAEYF,EAFZ,QAGd,OACI,oBAAItB,UAAWa,EAAW,2BAA6B,kBAAvD,SACI,cAAC,EAAD,2BAAkBW,GAAlB,IAA6BhB,SAAU,kBAAMA,EAASe,IAClDb,kBAAoB,kBAAMA,EAAkBa,IAC5Cd,aAAe,kBAAMA,EAAac,IAClCV,SAAUA,MAJ6DU,UCDxFE,G,MATG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMd,EAAU,EAAVA,KACxB,OACE,sBAAKZ,UAAU,oBAAf,UACE,2CACA,+BAAKY,EAAL,UAAkBc,EAAlB,mBCmBSC,EAxBU,SAACrB,GAQxB,OACE,qBAAKN,UAAU,YAAf,SAPgB,CAChB,CAAC4B,KAAM,MAAOrB,MAAO,OACrB,CAACqB,KAAM,SAAUrB,MAAO,WACxB,CAACqB,KAAM,OAAQrB,MAAO,SAMVc,KAAI,SAAAQ,GACV,IACMd,EADWT,EAAMwB,SAAWD,EAAID,KACV,eAAiB,4BAC7C,OACE,wBAAuBV,KAAK,SAASK,GAAIM,EAAID,KAC7C5B,UAAWe,EAAUE,QAAS,SAACd,GAAOG,EAAMyB,SAAS5B,EAAEC,OAAOmB,KAD9D,SACqEM,EAAItB,OAD5DsB,EAAID,YCWdI,G,MAzBK,SAAC1B,GAAW,IAAD,EAED2B,mBAAS,IAFR,mBAEpB1B,EAFoB,KAEb2B,EAFa,KAc3B,OACI,uBAAMlC,UAAU,uBAAuBmC,SAP1B,SAAChC,GACdA,EAAEiC,iBACF9B,EAAM+B,MAAM9B,GACZ2B,EAAS,KAIT,UACI,uBAAOI,UAAQ,EAACpB,KAAK,OAAOlB,UAAU,eAClCE,SAbU,SAACC,GACnB+B,EAAS/B,EAAEC,OAAON,QAaVG,YAAY,yBACZH,MAAOS,IACX,wBAAQP,UAAU,4BAAlB,2B,4BCRZuC,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wEACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAIXR,IAASS,OAEF,IAAMC,EAAKV,IAASW,YAEZX,IAAf,ECJeY,G,MAbA,SAAC,GAAgB,IAAftC,EAAc,EAAdA,SACb,OACI,sBAAKb,UAAWa,EAAW,kBAAmB,SAA9C,UACI,qBAAKb,UAAU,sBAAf,sCACI,sBAAKA,UAAU,sBAAf,UACI,mBAAGoD,KAAM,4CAA6ChD,OAAO,QAA7D,SAAsE,mBAAGJ,UAAU,oCACnF,mBAAGoD,KAAM,4CAA6ChD,OAAO,QAA7D,SAAsE,mBAAGJ,UAAU,oCACnF,mBAAGoD,KAAM,4CAA6ChD,OAAO,QAA7D,SAAsE,mBAAGJ,UAAU,0CCNjGqD,G,MAAkB,CACpBC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,UAAW,KAoEAC,EAjEM,SAACpD,GAAW,IAAD,EAEI2B,mBAASoB,GAFb,mBAErBM,EAFqB,KAEXC,EAFW,KAItBC,EAAgB,SAAC1D,GACnByD,EAAY,2BACLD,GADI,kBAENxD,EAAEC,OAAOwB,KAAOzB,EAAEC,OAAON,UA0BlC,OAEI,uBAAME,UAAU,uBAAuBmC,SAZ1B,SAAChC,GAZK,IAAC2D,GAapB3D,EAAEiC,iBACEuB,EAASH,WAAaG,EAASF,aAdfK,EAeDH,EAdnBpB,EAASS,OAAOe,+BAA+BD,EAAKP,MAAOO,EAAKN,UAC/DQ,MAAK,kBAAMzB,EAASS,OAAOiB,YAAYC,cAAc,CAClDC,YAAaL,EAAKR,SAClBc,SAAU,UAGbJ,MAAM,kBAAM1D,EAAM+D,gBAClBC,OAAO,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAIG,YAQ7Bd,EAAYP,KAQhB,UACI,uBAAOsB,QAAQ,WAAf,wBACA,uBAAOrC,UAAQ,EAACpB,KAAK,OAAOlB,UAAU,eAAe4B,KAAK,WACtD1B,SAAU2D,EACV5D,YAAY,kBACZH,MAAO6D,EAASL,WACpB,uBAAOqB,QAAQ,QAAf,qBACA,uBAAOrC,UAAQ,EAACpB,KAAK,QAAQlB,UAAU,eAAe4B,KAAK,QACvD1B,SAAU2D,EACV5D,YAAY,mBACZH,MAAO6D,EAASJ,QACpB,uBAAOoB,QAAQ,OAAf,wBACA,uBAAOrC,UAAQ,EAACpB,KAAK,WAAWlB,UAAU,eAAe4B,KAAK,WAC1D1B,SAAU2D,EACV5D,YAAY,sBACZH,MAAO6D,EAASH,WACpB,uBAAOmB,QAAQ,SAAf,+BACA,uBAAOrC,UAAQ,EAACpB,KAAK,WAAWlB,UAAU,eAAe4B,KAAK,YAC1D1B,SAAU2D,EACV5D,YAAY,uBACZH,MAAO6D,EAASF,YAEZE,EAASH,WAAaG,EAASF,UAAY,KAAO,qBAAKzD,UAAU,cAAf,wCAE1D,wBAAQA,UAAU,4BAA4BkB,KAAK,SAAnD,yBClEN0D,G,MAAoB,CACtBC,WAAY,GACZC,KAAM,CACFvB,MAAO,GACPC,SAAU,MAiDHuB,EA7CG,SAACzE,GAAW,IAAD,EAEW2B,mBAAS2C,GAFpB,mBAElBI,EAFkB,KAENC,EAFM,KAGnBpB,EAAgB,SAAC1D,GACnB8E,GAAc,SAAAD,GAAU,kCACjBA,GADiB,IAEpBF,KAAK,2BACEE,EAAWF,MADd,kBAEC3E,EAAEC,OAAOwB,KAAOzB,EAAEC,OAAON,cAiBtC,OACI,uBAAME,UAAU,oBAAoBmC,SAbvB,SAAChC,GACdA,EAAEiC,iBACFG,EAASS,OAAOkC,2BAA2BF,EAAWF,KAAKvB,MAAOyB,EAAWF,KAAKtB,UACjFQ,MAAK,WACFiB,EAAcL,MAEjBN,OAAM,SAAAC,GAAG,OAAIU,GAAc,SAAAD,GAAU,kCAC/BA,GAD+B,IAElCH,WAAYN,EAAIG,iBAKpB,UACI,uBAAOC,QAAQ,QAAf,qBACC,uBAAOrC,UAAQ,EAACpB,KAAK,QAAQlB,UAAU,eAAe4B,KAAK,QACxD1B,SAAU2D,EACV5D,YAAY,mBACZH,MAAOkF,EAAWzB,QACtB,uBAAOoB,QAAQ,WAAf,wBACA,uBAAOrC,UAAQ,EAACpB,KAAK,WAAWlB,UAAU,eAAe4B,KAAK,WAC1D1B,SAAU2D,EACV5D,YAAY,sBACZH,MAAOkF,EAAWxB,WAElBwB,EAAWH,WAAa,qBAAK7E,UAAU,cAAf,SAA8BgF,EAAWH,aAAoB,KAEzF,wBAAQ7E,UAAU,4BAA4BkB,KAAK,SAAnD,uBCmJGiE,EA1LH,WAER,IAAIL,EAAOvC,EAASS,OAAOiB,aAAe,KAF5B,EAMYhC,mBAAS,IANrB,mBAMPb,EANO,KAMAgE,EANA,OAQgBnD,mBAAS,IARzB,mBAQPoD,EARO,KAQEC,EARF,OAUcrD,mBAAS,OAVvB,mBAUPH,EAVO,KAUCyD,EAVD,OAYkBtD,oBAAS,GAZ3B,mBAYPuD,EAZO,KAYGC,EAZH,OAcUxD,oBAAS,GAdnB,mBAcPyD,EAdO,KAcDC,EAdC,OAgBsB1D,mBAAS,SAhB/B,mBAgBP2D,EAhBO,KAgBKC,EAhBL,KAkBdtD,EAASS,OAAO8C,oBAAoB,SAAAC,GAC5BA,GAA0B,UAAfH,GACXd,EAAOvC,EAASS,OAAOiB,YACvBwB,GAAY,IAIZA,GAAY,MAKpBO,qBAAW,WAEP/C,EAAGgD,WAAW,SAASC,MAAMlC,MAAK,SAAAmC,GAC9B,IAAMC,EC9CY,SAAAD,GAC1B,IAAIrC,EAAM,GAOV,OANAqC,EAASE,SAAQ,SAAAC,GACbxC,EAAKyC,KAAL,2BACOD,EAAIxC,QADX,IAEIvC,GAAI+E,EAAI/E,SAGTuC,EDsCe0C,CAAeL,GAC7Bf,EAASgB,MAGZ9B,OAAO,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAIG,cAElC,IAIH,IAAM+B,EAAgB,SAAClG,GACnB,MAAO,CACHA,QACAI,WAAW,EACXC,MAAM,EACN8F,MAAO5B,EAAK6B,IACZpF,IAAmB,IAAdqF,KAAKC,UAAoBC,aAIhCC,EAAO,uCAAG,WAAOxG,GAAP,eAAAyG,EAAA,6DACNC,EAAUR,EAAclG,GADlB,SAEN0C,EAAGgD,WAAW,SAASK,IAAIW,EAAQ1F,IAAI2F,IAAID,GAFrC,OAGZ7B,GAAS,SAAAhE,GAAK,4BAASA,GAAT,CAAgB6F,OAHlB,2CAAH,sDAMPE,EAAU,uCAAG,WAAM5F,GAAN,iBAAAyF,EAAA,0DACXI,OAAOC,QAAQ,8CADJ,gCAELpE,EAAGqD,IAAH,gBAAgB/E,IAAM+F,SAFjB,OAGLC,EAAMnG,EAAMoG,WAAU,SAAAlG,GAAI,OAAIA,EAAKC,KAAOA,KAC1CkG,EAJK,sBAIUrG,EAAMsG,MAAM,EAAEH,IAJxB,YAIiCnG,EAAMsG,MAAMH,EAAM,KAC9DnC,EAASqC,GALE,2CAAH,sDASVE,EAAY,uCAAG,WAAOC,EAAOrG,EAAIsG,GAAlB,qBAAAb,EAAA,6DACPc,EAAUF,EAAMG,MAAK,SAAAzG,GAAI,OAAIA,EAAKC,KAAOA,KADlC,SAGP0B,EAAGqD,IAAH,gBAAgB/E,IAAMyG,OAAtB,eACDH,GAAcC,EAAQD,KACpB,SAAApD,GACC,MAAM,IAAIwD,MAAMxD,MANX,OASP8C,EAAMK,EAAMJ,WAAU,SAAAlG,GAAI,OAAIA,EAAKC,KAAOA,KAC1C0F,EAVO,2BAWN7F,EAAMmG,IAXA,kBAYRM,GAAcC,EAAQD,KAErBJ,EAdO,sBAcQrG,EAAMsG,MAAM,EAAGH,IAdvB,CAc6BN,GAd7B,YAcyC7F,EAAMsG,MAAMH,EAAM,KACxEnC,EAASqC,GAfI,2CAAH,0DAkCZS,EAAY,uCAAG,sBAAAlB,EAAA,sEACXzE,EAASS,OAAOmF,UADL,2CAAH,qDASZC,EAAehH,GAASA,EAAMU,QAAO,SAAAR,GAAI,OAAIwD,GAAQxD,EAAKoF,QAAU5B,EAAK6B,OAClD7E,QAAO,SAAAR,GAAI,OAAIA,EAAKf,MAAM8H,cAAcC,QAAQjD,EAAQgD,gBAAkB,KAC1EvG,QAAO,SAAAR,GACJ,MAAe,SAAXQ,GACqB,IAAdR,EAAKV,KAEI,WAAXkB,GACgB,IAAdR,EAAKV,KAEJU,KAGtCiH,EAAYnH,EAAMU,QAAO,SAAAR,GAAI,OAAIA,EAAKoF,QAAU5B,KAChD0D,EAAYD,EAAUzG,QAAO,SAAA2G,GAAE,OAAgB,IAAZA,EAAG7H,QAAe8H,OACrDC,EAAeJ,EAAUG,OAASF,EAGlCI,EAAYpD,EACb,mCACG,sBAAKxF,UAAU,oBAAf,UACI,sBAAKA,UAAU,gBAAf,oBAAuC8E,GAAQA,EAAKX,eACpD,wBAAQnE,UAAU,mCAAmCiB,QAASiH,EAA9D,0BAIN,KAGAW,EAAOrD,EACT,qCACI,cAAC,EAAD,CAAW9D,KAAMiH,EAAc/H,KAAM4H,IACrC,sBAAKxI,UAAU,mBAAf,UACI,cAAC,EAAD,CAAaF,MAAOuF,EAAStF,SAjDrB,SAACD,GACjBwF,EAAWxF,MAiDH,cAAC,EAAD,CAAkBgC,OAAQA,EAAQC,SA9CvB,SAAC+G,GACpBvD,EAAUuD,SA+CN,cAAC,EAAD,CAAUjI,SAAU6E,EAAMtE,MAAOgH,EAAc5H,SAAW2G,EACtD1G,aA7DO,SAAAc,GACfoG,EAAavG,EAAOG,EAAI,SA4DUb,kBAzDd,SAAAa,GACpBoG,EAAavG,EAAOG,EAAI,gBAyDpB,cAAC,EAAD,CAAac,MAAO0E,OAGxB,qCACI,2CAEmB,UAAfnB,EACA,qCACA,cAAC,EAAD,IACA,sBAAK5F,UAAU,aAAf,4DAA2E,sBAAMA,UAAU,aACvFiB,QAAS,kBAAM4E,EAAc,aAD0C,wBAI3E,qCACA,cAAC,EAAD,CAAcxB,WAAY,kBAAMwB,EAAc,YAC9C,sBAAK7F,UAAU,aAAf,yCAAwD,sBAAMA,UAAU,aACpEiB,QAAS,kBAAM4E,EAAc,UADuB,uBAEpD,sBAAK7F,UAAU,aAAf,oEAAmF,uBAAnF,iFAOhB,OACI,sBAAKA,UAAW0F,EAAO,oBAAsB,WAA7C,UACKkD,EACD,sBAAK5I,UAAU,qDAAf,UACI,uBAAOA,UAAU,uBAAuB2E,QAAQ,gBAAhD,uBACA,uBAAOzD,KAAK,WAAWlB,UAAU,uBAAuBuB,GAAG,gBACvDzB,MAAO4F,EAAMxF,SAxEV,WACRyF,GAAPD,SAyEKmD,EACD,cAAC,EAAD,CAAQhI,SAAU6E,Q,ME7L9BqD,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.5951176c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search-panel.scss';\r\n\r\nconst SearchPanel = ({value, onSearch}) => {\r\n    return <input className=\"form-control search-input\" placeholder=\"Search\" \r\n    onChange={(e) => onSearch(e.target.value)}\r\n    value={value}/>\r\n};\r\n\r\nexport default SearchPanel;","import React from 'react';\r\nimport './todo-list-item.scss';\r\n\r\nconst TodoListItem = (props) => {\r\n \r\n    const {label, onDelete, onToggleDone, onToggleImportant, important, done, darkmode} = props;\r\n    \r\n    let itemClass = darkmode ? 'todo-list-item darkmode' : 'todo-list-item';\r\n    \r\n    if (done) {\r\n      itemClass += ' done'\r\n    }\r\n    if (important) {\r\n      itemClass += ' important'\r\n    }\r\n\r\n    const btnClass = important ? \"btn btn-outline-danger btn-sm float-right mr-2 active\" : \"btn btn-outline-danger btn-sm float-right mr-2\";\r\n  \r\n    return (\r\n      <div className={itemClass} data-todoitem>\r\n        <div\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </div>\r\n\r\n        <div className=\"todo-btn-group\">\r\n          <button type=\"button\"\r\n                  className={darkmode ? btnClass+' darkmode' : btnClass}\r\n                  onClick={onToggleImportant} >\r\n            <i className=\"fa fa-exclamation\" />\r\n          </button>\r\n          <button type=\"button\"\r\n                  className=\"btn btn-outline-secondary btn-sm float-right\"\r\n                  onClick={onDelete}>\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n          \r\n        </div>\r\n      \r\n      </div>\r\n    );  \r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.scss';\r\n\r\nconst TodoList = ({items, onDelete, onToggleDone, onToggleImportant, darkmode}) => {\r\n\r\n    return(\r\n        <ul className=\"list-group todo-list\">\r\n            {\r\n                items.map(item => {\r\n\r\n                    const {id,...itemProps} = item;\r\n                    return(\r\n                        <li className={darkmode ? \"list-group-item darkmode\" : \"list-group-item\"} key={id}>\r\n                            <TodoListItem {...itemProps} onDelete={() => onDelete(id)}\r\n                                onToggleImportant= {() => onToggleImportant(id)}\r\n                                onToggleDone= {() => onToggleDone(id)}\r\n                                darkmode={darkmode}/>\r\n                            </li> //{...item} взяли все ключи item и записали их в одноименные атрибуты\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './app-header.scss';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>ToDo List</h1>\r\n      <h2>{done} done, {toDo} pending</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nconst ItemStatusFilter = (props) => {\r\n\r\n    const buttons = [\r\n    {name: \"all\", label: \"All\"},\r\n    {name: \"active\", label: \"Pending\"},\r\n    {name: \"done\", label: \"Done\"}\r\n  ];\r\n  \r\n  return (\r\n    <div className=\"btn-group\">\r\n      {\r\n        buttons.map(btn => {\r\n          const isActive = props.filter === btn.name;\r\n          const btnClass = isActive ? \"btn btn-info\" : \"btn btn-outline-secondary\";\r\n          return(\r\n            <button key={btn.name} type=\"button\" id={btn.name}\r\n            className={btnClass} onClick={(e) => {props.onSwitch(e.target.id)}}>{btn.label}</button>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemStatusFilter;","import React, {useState} from 'react';\r\nimport './item-add-form.scss';\r\n\r\nconst ItemAddForm = (props) => {\r\n\r\n    const [label, setLabel] = useState('');\r\n\r\n    const onLabelChange = (e) => {\r\n        setLabel(e.target.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.onAdd(label);\r\n        setLabel('');  \r\n    }\r\n\r\n    return(\r\n        <form className=\"item-add-form d-flex\" onSubmit={onSubmit}>\r\n            <input required type=\"text\" className=\"form-control\" \r\n                onChange={onLabelChange} \r\n                placeholder=\"What needs to be done?\"\r\n                value={label} />\r\n            <button className=\"btn btn-outline-secondary\">Add item</button>\r\n        </form>\r\n    )  \r\n};\r\n\r\nexport default ItemAddForm;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDwUxxk_ce9eeG2OCgpHJnXB63LqRarWvk\",\r\n    authDomain: \"todo-app-c1a38.firebaseapp.com\",\r\n    databaseURL: \"https://todo-app-c1a38-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"todo-app-c1a38\",\r\n    storageBucket: \"todo-app-c1a38.appspot.com\",\r\n    messagingSenderId: \"449895565577\",\r\n    appId: \"1:449895565577:web:5c9aad265847e3de21abd8\"\r\n  };\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.auth(); // initializing authentcation\r\n\r\nexport const db = firebase.firestore(); // now our db is an instance of firestore\r\n\r\nexport default firebase;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer = ({darkmode}) => {\r\n    return(\r\n        <div className={darkmode ? 'footer darkmode': 'footer'}>\r\n            <div className=\"footer_social_title\">Find us on social media:</div>\r\n                <div className=\"footer_social_icons\">\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-facebook-square\"></i></a>\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-linkedin-square\"></i></a>\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-github-square\"></i></a>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {useState} from 'react';\r\nimport './register.scss';\r\nimport firebase from '../../firebase.config';\r\n\r\nconst initialRegState = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n}\r\n\r\nconst RegisterForm = (props) => {\r\n\r\n    const [regState, setRegState] = useState(initialRegState);\r\n\r\n    const onLabelChange = (e) => {\r\n        setRegState({\r\n            ...regState,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleRegister = (data) => {\r\n        firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n        .then(() => firebase.auth().currentUser.updateProfile({\r\n            displayName: data.username,\r\n            photoURL: null\r\n        }))\r\n        //.then( () => firebase.auth().currentUser.sendEmailVerification().then(() => console.log('Email sent')) )\r\n        .then( () => props.onRegister())\r\n        .catch (err => console.error(err.message))\r\n    \r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (regState.password === regState.password2) {\r\n            handleRegister(regState);\r\n            setRegState(initialRegState); \r\n        }\r\n        else return;\r\n        \r\n    }\r\n\r\n    return(\r\n\r\n        <form className=\"register-form d-flex\" onSubmit={onSubmit}>\r\n            <label htmlFor=\"username\">Username: </label>\r\n            <input required type=\"text\" className=\"form-control\" name=\"username\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your name\"\r\n                value={regState.username} />\r\n            <label htmlFor=\"email\">Email: </label>\r\n            <input required type=\"email\" className=\"form-control\" name=\"email\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your email\"\r\n                value={regState.email} />\r\n            <label htmlFor=\"pass\">Password: </label>\r\n            <input required type=\"password\" className=\"form-control\" name=\"password\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your password\"\r\n                value={regState.password} />\r\n            <label htmlFor=\"pass-2\">Repeat password: </label>\r\n            <input required type=\"password\" className=\"form-control\" name=\"password2\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Repeat your password\"\r\n                value={regState.password2} />\r\n                {\r\n                    regState.password === regState.password2 ? null : <div className=\"err-message\">Passwords don´t match!!</div>\r\n                }\r\n            <button className=\"btn btn-outline-secondary\" type=\"submit\">Sign up</button>\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React, {useState} from 'react';\r\nimport './login.scss';\r\nimport firebase from '../../firebase.config';\r\n\r\nconst initialLoginState = {\r\n    loginError: '',\r\n    user: {\r\n        email: '',\r\n        password: ''\r\n    }\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const [loginState, setLoginState] = useState(initialLoginState);\r\n    const onLabelChange = (e) => {\r\n        setLoginState(loginState => ({\r\n            ...loginState,\r\n            user: {\r\n                ...loginState.user,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        firebase.auth().signInWithEmailAndPassword(loginState.user.email, loginState.user.password)\r\n        .then(() => {\r\n            setLoginState(initialLoginState);      \r\n        })\r\n        .catch(err => setLoginState(loginState => ({\r\n            ...loginState,\r\n            loginError: err.message\r\n        })));  \r\n    }\r\n\r\n    return(\r\n        <form className=\"login-form d-flex\" onSubmit={onSubmit}>\r\n            <label htmlFor=\"email\">Email: </label>\r\n             <input required type=\"email\" className=\"form-control\" name=\"email\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your email\"\r\n                value={loginState.email} />\r\n            <label htmlFor=\"password\">Password: </label>\r\n            <input required type=\"password\" className=\"form-control\" name=\"password\"\r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your password\"\r\n                value={loginState.password} />\r\n                {\r\n                loginState.loginError ? <div className=\"err-message\">{loginState.loginError}</div> : null\r\n                }\r\n            <button className=\"btn btn-outline-secondary\" type=\"submit\">Login</button>     \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, {useEffect, useState} from 'react';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport AppHeader from '../app-header/app-header';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport ItemAddForm from '../item-add-form/item-add-form';\r\nimport './app.scss';\r\nimport firebase, { db } from '../../firebase.config';\r\nimport Footer from '../footer/footer';\r\nimport { firebaseLooper } from '../../utils/tools';\r\nimport RegisterForm from '../register/register';\r\nimport LoginForm from '../login/login';\r\n\r\nconst App = () => {\r\n\r\n    let user = firebase.auth().currentUser || null;\r\n\r\n    //==============State hooks====================================================\r\n\r\n    const [items, setItems] = useState([]);\r\n     \r\n    const [pattern, setPattern] = useState(''); //search query\r\n\r\n    const [filter, setFilter] = useState('all');\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    const [dark, setDark] = useState(false);\r\n\r\n    const [signInType, setSignInType] = useState('login');\r\n\r\n    firebase.auth().onAuthStateChanged( userObj => {\r\n        if (userObj && signInType === 'login') {\r\n            user = firebase.auth().currentUser;\r\n            setLoggedIn(true);\r\n            //console.log(`${user.displayName} logged in`);\r\n        }\r\n        else {\r\n            setLoggedIn(false);\r\n            //console.log('No authorized users online');\r\n        }\r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        db.collection('items').get().then(snapshot => {\r\n            const todos = firebaseLooper(snapshot);\r\n            setItems(todos);\r\n            //console.log('useEffect ran');\r\n        })\r\n        .catch( err => console.error(err.message));\r\n\r\n    }, []);\r\n\r\n    //==============Methods ====================================================\r\n\r\n    const createNewItem = (label) => {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            owner: user.uid,\r\n            id: (Math.random()*100000000).toString()\r\n        }\r\n    };\r\n\r\n    const addItem = async (label) => { \r\n        const newItem = createNewItem(label);\r\n        await db.collection('items').doc(newItem.id).set(newItem);\r\n        setItems(items => ([...items, newItem]));\r\n    };\r\n\r\n    const deleteItem = async id => { \r\n        if (window.confirm('Are you sure you want to delete this item?')) {\r\n            await db.doc(`items/${id}`).delete();\r\n            const idX = items.findIndex(item => item.id === id);\r\n            const newArray = [...items.slice(0,idX), ...items.slice(idX + 1)];\r\n            setItems(newArray);\r\n        }      \r\n    };\r\n\r\n    const toggleStatus = async (array, id, statusName) => { \r\n            const oldItem = array.find(item => item.id === id);\r\n            \r\n            await db.doc(`items/${id}`).update({\r\n                [statusName]: !oldItem[statusName]\r\n                }, error => {\r\n                    throw new Error(error);\r\n                    }\r\n                );\r\n            const idX = array.findIndex(item => item.id === id);\r\n            const newItem = {\r\n                ...items[idX],\r\n                [statusName]: !oldItem[statusName]\r\n            };\r\n            const newArray = [...items.slice(0, idX), newItem, ...items.slice(idX + 1)];\r\n            setItems(newArray);    \r\n    };\r\n\r\n    const toggleDone = id => {  \r\n        toggleStatus(items, id, 'done');\r\n    };\r\n\r\n    const toggleImportant = id => { \r\n        toggleStatus(items, id, 'important');\r\n    };\r\n\r\n    const searchItems = (value) => { \r\n        setPattern(value);\r\n    };\r\n\r\n    const onSwitchFilter = (filterName) => { \r\n        setFilter(filterName);\r\n    }\r\n\r\n    const handleLogOut = async () => {\r\n        await firebase.auth().signOut();\r\n    }\r\n\r\n    const toggleDark = () => {\r\n        dark ? setDark(false) : setDark(true);\r\n    };\r\n\r\n    // ===== Rendering options ===============\r\n    const visibleItems = items && items.filter(item => user && item.owner === user.uid)\r\n                                .filter(item => item.label.toLowerCase().indexOf(pattern.toLowerCase()) > -1)\r\n                                .filter(item => {\r\n                                    if (filter === 'done') {\r\n                                        return item.done === true\r\n                                    }\r\n                                    else if (filter === 'active') {\r\n                                        return item.done === false\r\n                                    }\r\n                                    else return item\r\n                                });\r\n\r\n    const userItems = items.filter(item => item.owner === user);\r\n    const doneCount = userItems.filter(el => el.done === true).length;\r\n    const pendingCount = userItems.length - doneCount;\r\n\r\n    // ===== User panel viewed after login ===============\r\n    const userPanel = loggedIn ? \r\n         <>\r\n            <div className=\"user-panel d-flex\">\r\n                <div className=\"greeting mr-2\">Hello, {user && user.displayName}</div> \r\n                <button className=\"btn btn-outline-secondary logout\" onClick={handleLogOut}>Log out</button>            \r\n            </div>\r\n            \r\n        </>\r\n        : null;\r\n\r\n    // ===== Todo list view based on if logged in or not ===============\r\n    const list = loggedIn ? \r\n        <>\r\n            <AppHeader toDo={pendingCount} done={doneCount} />\r\n            <div className=\"top-panel d-flex\">\r\n                <SearchPanel value={pattern} onSearch={searchItems}/>\r\n                <ItemStatusFilter filter={filter} onSwitch={onSwitchFilter}/>\r\n            </div>\r\n            <TodoList darkmode={dark} items={visibleItems} onDelete={ deleteItem} \r\n                onToggleDone={toggleDone} onToggleImportant={toggleImportant}/>\r\n            <ItemAddForm onAdd={addItem}/> \r\n        </> \r\n        : \r\n        <>\r\n            <h1>ToDo List</h1>\r\n            {\r\n                signInType === 'login' ? \r\n                <>\r\n                <LoginForm />\r\n                <div className=\"descr mt-2\">If you are not registered yet, you can sign up <span className=\"login-span\" \r\n                    onClick={() => setSignInType('register')}>here</span></div>\r\n                </>\r\n                : \r\n                <>\r\n                <RegisterForm onRegister={() => setSignInType('login')} />\r\n                <div className=\"descr mt-2\">Already registered? Please  <span className=\"login-span\" \r\n                    onClick={() => setSignInType('login')}>log in</span></div>\r\n                    <div className=\"descr mt-2\">For demo purposes email verification has been disabled.<br/> \r\n                    You can register with an imaginary email (por example, test@test.com)</div>\r\n                </>\r\n            } \r\n        </>\r\n\r\n    // ===== Styling ===============\r\n    return(\r\n        <div className={dark ? \"todo-app darkmode\" : \"todo-app\"}>\r\n            {userPanel}\r\n            <div className=\"dark-toggle custom-control custom-switch mt-3 mb-2\">\r\n                <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Dark mode</label>\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" \r\n                    value={dark} onChange={toggleDark}/>\r\n            </div>\r\n            {list}\r\n            <Footer darkmode={dark} />\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default App;","export const firebaseLooper = snapshot => {\r\n    let data= [];\r\n    snapshot.forEach(doc => {\r\n        data.push({\r\n            ...doc.data(),\r\n            id: doc.id //custom id generated by Firebase to be mapped as a property\r\n        })\r\n    })\r\n    return data;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport 'bootswatch/dist/sketchy/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}