{"version":3,"sources":["components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/app-header/app-header.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","components/username/username.js","firebase.config.js","components/footer/footer.js","components/app/app.js","utils/tools.js","index.js"],"names":["SearchPanel","value","onSearch","className","placeholder","onChange","e","target","TodoListItem","props","label","onDelete","onToggleDone","onToggleImportant","important","done","darkmode","itemClass","btnClass","data-todoitem","onClick","type","TodoList","items","map","item","id","itemProps","AppHeader","toDo","ItemStatusFilter","name","btn","filter","onSwitch","ItemAddForm","useState","setLabel","onSubmit","preventDefault","onAdd","required","UsernameForm","onLogin","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","Footer","href","App","user","localStorage","getItem","setItems","pattern","setPattern","setFilter","loggedIn","setLoggedIn","dark","setDark","useEffect","collection","get","then","snapshot","todos","data","forEach","doc","push","firebaseLooper","catch","err","console","error","message","createNewItem","owner","Math","random","toString","addItem","a","newItem","set","deleteItem","window","confirm","delete","idX","findIndex","newArray","slice","toggleStatus","array","statusName","oldItem","find","update","Error","visibleItems","toLowerCase","indexOf","userItems","doneCount","el","length","pendingCount","userPanel","list","filterName","username","setItem","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d4c4ce8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search-panel.scss';\r\n\r\nconst SearchPanel = ({value, onSearch}) => {\r\n    return <input className=\"form-control search-input\" placeholder=\"Search\" \r\n    onChange={(e) => onSearch(e.target.value)}\r\n    value={value}/>\r\n};\r\n\r\nexport default SearchPanel;","import React from 'react';\r\nimport './todo-list-item.scss';\r\n\r\nconst TodoListItem = (props) => {\r\n \r\n    const {label, onDelete, onToggleDone, onToggleImportant, important, done, darkmode} = props;\r\n    \r\n    let itemClass = darkmode ? 'todo-list-item darkmode' : 'todo-list-item';\r\n    \r\n    if (done) {\r\n      itemClass += ' done'\r\n    }\r\n    if (important) {\r\n      itemClass += ' important'\r\n    }\r\n\r\n    const btnClass = important ? \"btn btn-outline-danger btn-sm float-right mr-2 active\" : \"btn btn-outline-danger btn-sm float-right mr-2\";\r\n  \r\n    return (\r\n      <div className={itemClass} data-todoitem>\r\n        <div\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </div>\r\n\r\n        <div className=\"todo-btn-group\">\r\n          <button type=\"button\"\r\n                  className={darkmode ? btnClass+' darkmode' : btnClass}\r\n                  onClick={onToggleImportant} >\r\n            <i className=\"fa fa-exclamation\" />\r\n          </button>\r\n          <button type=\"button\"\r\n                  className=\"btn btn-outline-secondary btn-sm float-right\"\r\n                  onClick={onDelete}>\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n          \r\n        </div>\r\n      \r\n      </div>\r\n    );  \r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.scss';\r\n\r\nconst TodoList = ({items, onDelete, onToggleDone, onToggleImportant, darkmode}) => {\r\n\r\n    return(\r\n        <ul className=\"list-group todo-list\">\r\n            {\r\n                items.map(item => {\r\n\r\n                    const {id,...itemProps} = item;\r\n                    return(\r\n                        <li className={darkmode ? \"list-group-item darkmode\" : \"list-group-item\"} key={id}>\r\n                            <TodoListItem {...itemProps} onDelete={() => onDelete(id)}\r\n                                onToggleImportant= {() => onToggleImportant(id)}\r\n                                onToggleDone= {() => onToggleDone(id)}\r\n                                darkmode={darkmode}/>\r\n                            </li> //{...item} взяли все ключи item и записали их в одноименные атрибуты\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './app-header.scss';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>ToDo List</h1>\r\n      <h2>{done} done, {toDo} pending</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './item-status-filter.scss';\r\n\r\nconst ItemStatusFilter = (props) => {\r\n\r\n    const buttons = [\r\n    {name: \"all\", label: \"All\"},\r\n    {name: \"active\", label: \"Pending\"},\r\n    {name: \"done\", label: \"Done\"}\r\n  ];\r\n  \r\n  return (\r\n    <div className=\"btn-group\">\r\n      {\r\n        buttons.map(btn => {\r\n          const isActive = props.filter === btn.name;\r\n          const btnClass = isActive ? \"btn btn-info\" : \"btn btn-outline-secondary\";\r\n          return(\r\n            <button key={btn.name} type=\"button\" id={btn.name}\r\n            className={btnClass} onClick={(e) => {props.onSwitch(e.target.id)}}>{btn.label}</button>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemStatusFilter;","import React, {useState} from 'react';\r\nimport './item-add-form.scss';\r\n\r\nconst ItemAddForm = (props) => {\r\n\r\n    const [label, setLabel] = useState('');\r\n\r\n    const onLabelChange = (e) => {\r\n        setLabel(e.target.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.onAdd(label);\r\n        setLabel('');  \r\n    }\r\n\r\n    return(\r\n        <form className=\"item-add-form d-flex\" onSubmit={onSubmit}>\r\n            <input required type=\"text\" className=\"form-control\" \r\n                onChange={onLabelChange} \r\n                placeholder=\"What needs to be done?\"\r\n                value={label} />\r\n            <button className=\"btn btn-outline-secondary\">Add item</button>\r\n        </form>\r\n    )  \r\n};\r\n\r\nexport default ItemAddForm;","import React, {useState} from 'react';\r\nimport './username.scss';\r\n\r\nconst UsernameForm = (props) => {\r\n\r\n    const [label, setLabel] = useState('');\r\n\r\n    const onLabelChange = (e) => {\r\n        setLabel(e.target.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.onLogin(label);\r\n        setLabel('');  \r\n    }\r\n\r\n    return(\r\n        <form className=\"item-add-form d-flex\" onSubmit={onSubmit}>\r\n            <input required type=\"text\" className=\"form-control\" \r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your name\"\r\n                value={label} />\r\n            <button className=\"btn btn-outline-secondary\">Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UsernameForm;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDwUxxk_ce9eeG2OCgpHJnXB63LqRarWvk\",\r\n    authDomain: \"todo-app-c1a38.firebaseapp.com\",\r\n    databaseURL: \"https://todo-app-c1a38-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"todo-app-c1a38\",\r\n    storageBucket: \"todo-app-c1a38.appspot.com\",\r\n    messagingSenderId: \"449895565577\",\r\n    appId: \"1:449895565577:web:5c9aad265847e3de21abd8\"\r\n  };\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.firestore(); // now our db is an instance of firestore\r\n\r\nexport default firebase;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer = ({darkmode}) => {\r\n    return(\r\n        <div className={darkmode ? 'footer darkmode': 'footer'}>\r\n            <div className=\"footer_social_title\">Find us on social media:</div>\r\n                <div className=\"footer_social_icons\">\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-facebook-square\"></i></a>\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-linkedin-square\"></i></a>\r\n                    <a href={'https://github.com/ssmirnovacode/ToDo-App'} target=\"blank\" ><i className=\"sm-icon fa fa-github-square\"></i></a>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {useEffect, useState} from 'react';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport AppHeader from '../app-header/app-header';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport ItemAddForm from '../item-add-form/item-add-form';\r\nimport './app.scss';\r\nimport UsernameForm from '../username/username';\r\nimport { db } from '../../firebase.config';\r\nimport Footer from '../footer/footer';\r\nimport { firebaseLooper } from '../../utils/tools';\r\n\r\nconst App = () => {\r\n\r\n    const user = localStorage.getItem('user') || '';\r\n\r\n    //==============State hooks====================================================\r\n\r\n    const [items, setItems] = useState([]);\r\n     \r\n    const [pattern, setPattern] = useState(''); //search query\r\n\r\n    const [filter, setFilter] = useState('all');\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    const [dark, setDark] = useState(false);\r\n\r\n    useEffect( () => {\r\n        //localStorage.clear();\r\n        db.collection('items').get().then(snapshot => {\r\n            const todos = firebaseLooper(snapshot);\r\n            setItems(todos);\r\n            //console.log('useEffect ran');\r\n        })\r\n        .catch( err => console.error(err.message));\r\n\r\n    }, []);\r\n\r\n    //==============Methods ====================================================\r\n\r\n    const createNewItem = (label) => {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            owner: localStorage.getItem('user'),\r\n            id: (Math.random()*100000000).toString()\r\n        }\r\n    };\r\n\r\n    const addItem = async (label) => { \r\n        const newItem = createNewItem(label);\r\n        await db.collection('items').doc(newItem.id).set(newItem);\r\n        setItems(items => ([...items, newItem]));\r\n    };\r\n\r\n    const deleteItem = async id => { // pending method\r\n        if (window.confirm('Are you sure you want to delete this item?')) {\r\n            await db.doc(`items/${id}`).delete();\r\n            const idX = items.findIndex(item => item.id === id);\r\n            const newArray = [...items.slice(0,idX), ...items.slice(idX + 1)];\r\n            setItems(newArray);\r\n        }      \r\n    };\r\n\r\n    const toggleStatus = async (array, id, statusName) => { \r\n            const oldItem = array.find(item => item.id === id);\r\n            \r\n            await db.doc(`items/${id}`).update({\r\n                [statusName]: !oldItem[statusName]\r\n                }, error => {\r\n                    throw new Error(error);\r\n                    }\r\n                );\r\n            const idX = array.findIndex(item => item.id === id);\r\n            const newItem = {\r\n                ...items[idX],\r\n                [statusName]: !oldItem[statusName]\r\n            };\r\n            const newArray = [...items.slice(0, idX), newItem, ...items.slice(idX + 1)];\r\n            setItems(newArray);    \r\n    };\r\n\r\n    const toggleDone = id => {  \r\n        toggleStatus(items, id, 'done');\r\n    };\r\n\r\n    const toggleImportant = id => { \r\n        toggleStatus(items, id, 'important');\r\n    };\r\n\r\n    const searchItems = (value) => { \r\n        setPattern(value);\r\n    };\r\n\r\n    const onSwitchFilter = (filterName) => { \r\n        setFilter(filterName);\r\n    }\r\n\r\n    const handleLogin = (username) => {\r\n        localStorage.setItem('user', username);\r\n        setLoggedIn(true);\r\n    }\r\n\r\n    const toggleDark = () => {\r\n        dark ? setDark(false) : setDark(true);\r\n    };\r\n\r\n    // ===== Rendering options ===============\r\n    const visibleItems = items && items.filter(item => item.owner === user)\r\n                                .filter(item => item.label.toLowerCase().indexOf(pattern.toLowerCase()) > -1)\r\n                                .filter(item => {\r\n                                    if (filter === 'done') {\r\n                                        return item.done === true\r\n                                    }\r\n                                    else if (filter === 'active') {\r\n                                        return item.done === false\r\n                                    }\r\n                                    else return item\r\n                                });\r\n\r\n    const userItems = items.filter(item => item.owner === user);\r\n    const doneCount = userItems.filter(el => el.done === true).length;\r\n    const pendingCount = userItems.length - doneCount;\r\n\r\n    // ===== User panel viewed after login ===============\r\n    const userPanel = loggedIn ? \r\n         <>\r\n            <div className=\"user-panel d-flex\">\r\n                <div className=\"greeting mr-2\">Hello, {user}</div> \r\n                <button className=\"btn btn-outline-secondary logout\" onClick={() => setLoggedIn(false)}>Log out</button>            \r\n            </div>\r\n            \r\n        </>\r\n        : null;\r\n\r\n    // ===== Todo list view based on if logged in or not ===============\r\n    const list = loggedIn ? \r\n        <>\r\n            <AppHeader toDo={pendingCount} done={doneCount} />\r\n            <div className=\"top-panel d-flex\">\r\n                <SearchPanel value={pattern} onSearch={searchItems}/>\r\n                <ItemStatusFilter filter={filter} onSwitch={onSwitchFilter}/>\r\n            </div>\r\n            <TodoList darkmode={dark} items={visibleItems} onDelete={ deleteItem} \r\n                onToggleDone={toggleDone} onToggleImportant={toggleImportant}/>\r\n            <ItemAddForm onAdd={addItem}/> \r\n        </> \r\n        : \r\n        <>\r\n            <h1>ToDo List</h1>\r\n            <UsernameForm onLogin={handleLogin}/>\r\n            <div className=\"descr mt-2\">Please log in. No password required.<br/>To create a new user just type your username. \r\n                <br/><span>Please note that our todo items will be available to anyone who logs in with your username</span></div>\r\n        </>\r\n\r\n    // ===== Styling ===============\r\n    return(\r\n        <div className={dark ? \"todo-app darkmode\" : \"todo-app\"}>\r\n            {userPanel}\r\n            <div className=\"dark-toggle custom-control custom-switch mt-3 mb-2\">\r\n                <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Dark mode</label>\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" \r\n                    value={dark} onChange={toggleDark}/>\r\n            </div>\r\n            {list}\r\n            <Footer darkmode={dark} />\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default App;","export const firebaseLooper = snapshot => {\r\n    let data= [];\r\n    snapshot.forEach(doc => {\r\n        data.push({\r\n            ...doc.data(),\r\n            id: doc.id //custom id generated by Firebase to be mapped as a property\r\n        })\r\n    })\r\n    return data;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport 'bootswatch/dist/sketchy/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}