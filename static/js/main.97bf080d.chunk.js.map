{"version":3,"sources":["components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/app-header/app-header.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","assets/baseURL.js","services/requests.js","components/username/username.js","components/app/app.js","index.js"],"names":["SearchPanel","value","onSearch","className","placeholder","onChange","e","target","TodoListItem","props","label","onDelete","onToggleDone","onToggleImportant","important","done","itemClass","darkmode","btnClass","onClick","type","TodoList","items","map","item","id","itemProps","AppHeader","toDo","ItemStatusFilter","name","btn","filter","onSwitch","ItemAddForm","useState","setLabel","onSubmit","preventDefault","onAdd","required","baseURL","RequestService","url","a","fetch","res","ok","Error","status","json","data","number","newItem","method","headers","body","JSON","stringify","UsernameForm","onLogin","App","user","localStorage","getItem","reqService","setItems","useEffect","clear","mounted","getItems","then","catch","console","log","pattern","setPattern","setFilter","loggedIn","setLoggedIn","dark","setDark","toggleStatus","array","statusName","idx","findIndex","el","oldItem","updatedItem","updateItem","slice","visibleItems","owner","toLowerCase","indexOf","doneCount","length","pendingCount","userPanel","list","filterName","window","confirm","deleteItem","Math","random","createNewItem","postItem","username","setItem","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97bf080d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search-panel.scss';\r\n\r\nconst SearchPanel = ({value, onSearch}) => {\r\n    return <input className=\"form-control search-input\" placeholder=\"Search\" \r\n    onChange={(e) => onSearch(e.target.value)}\r\n    value={value}/>\r\n};\r\n\r\nexport default SearchPanel;","import React from 'react';\r\nimport './todo-list-item.scss';\r\n\r\nconst TodoListItem = (props) => {\r\n \r\n    const {label, onDelete, onToggleDone, onToggleImportant, important, done, darkmode} = props;\r\n    \r\n    let itemClass = darkmode ? 'todo-list-item darkmode' : 'todo-list-item';\r\n    \r\n    if (done) {\r\n      itemClass += ' done'\r\n    }\r\n    if (important) {\r\n      itemClass += ' important'\r\n    }\r\n\r\n    const btnClass = important ? \"btn btn-outline-danger btn-sm float-right mr-2 active\" : \"btn btn-outline-danger btn-sm float-right mr-2\";\r\n  \r\n    return (\r\n      <div className={itemClass}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-secondary btn-sm float-right\"\r\n                onClick={onDelete}>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n  \r\n        <button type=\"button\"\r\n                className={btnClass}\r\n                onClick={onToggleImportant} >\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n      \r\n      </div>\r\n    );  \r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.scss';\r\n\r\nconst TodoList = ({items, onDelete, onToggleDone, onToggleImportant, darkmode}) => {\r\n\r\n    return(\r\n        <ul className=\"list-group todo-list\">\r\n            {\r\n                items.map(item => {\r\n\r\n                    const {id, ...itemProps} = item;\r\n                    return(\r\n                        <li className={darkmode ? \"list-group-item darkmode\" : \"list-group-item\"} key={id}>\r\n                            <TodoListItem {...itemProps} onDelete={() => onDelete(id)}\r\n                                onToggleImportant= {() => onToggleImportant(id)}\r\n                                onToggleDone= {() => onToggleDone(id)}\r\n                                darkmode={darkmode}/>\r\n                            </li> //{...item} взяли все ключи item и записали их в одноименные атрибуты\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './app-header.scss';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>ToDo List</h1>\r\n      <h2>{done} done, {toDo} pending</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './item-status-filter.scss';\r\n\r\nconst ItemStatusFilter = (props) => {\r\n\r\n    const buttons = [\r\n    {name: \"all\", label: \"All\"},\r\n    {name: \"active\", label: \"Pending\"},\r\n    {name: \"done\", label: \"Done\"}\r\n  ];\r\n  \r\n  return (\r\n    <div className=\"btn-group\">\r\n      {\r\n        buttons.map(btn => {\r\n          const isActive = props.filter === btn.name;\r\n          const btnClass = isActive ? \"btn btn-info\" : \"btn btn-outline-secondary\";\r\n          return(\r\n            <button key={btn.name} type=\"button\" id={btn.name}\r\n            className={btnClass} onClick={(e) => {props.onSwitch(e.target.id)}}>{btn.label}</button>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemStatusFilter;","import React, {useState} from 'react';\r\nimport './item-add-form.scss';\r\n\r\nconst ItemAddForm = (props) => {\r\n\r\n    const [label, setLabel] = useState('');\r\n\r\n    const onLabelChange = (e) => {\r\n        setLabel(e.target.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.onAdd(label);\r\n        setLabel('');  \r\n    }\r\n\r\n    return(\r\n        <form className=\"item-add-form d-flex\" onSubmit={onSubmit}>\r\n            <input required type=\"text\" className=\"form-control\" \r\n                onChange={onLabelChange} \r\n                placeholder=\"What needs to be done?\"\r\n                value={label} />\r\n            <button className=\"btn btn-outline-secondary\">Add item</button>\r\n        </form>\r\n    )  \r\n};\r\n\r\nexport default ItemAddForm;","//const baseURL = 'http://localhost:3001/';\r\nconst baseURL = 'https://todo-app-ssmirnova.herokuapp.com/';\r\n\r\nexport default baseURL;","export default class RequestService {\r\n\r\n    //_baseAPI = 'http://localhost:3001/items/';\r\n\r\n    async getItems (url) {\r\n        const res = await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    async postItem(url, data) {\r\n        const number = data.id; \r\n        const newItem = {\r\n            ...data,\r\n            id: number\r\n        }\r\n        const res = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(newItem)\r\n        });\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    async updateItem(url, data) {\r\n        const res = await fetch(url, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    async deleteItem(url) {\r\n        const res = await fetch(url, {\r\n            method: \"DELETE\"\r\n        });\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport './username.scss';\r\n\r\nconst UsernameForm = (props) => {\r\n\r\n    const [label, setLabel] = useState('');\r\n\r\n    const onLabelChange = (e) => {\r\n        setLabel(e.target.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.onLogin(label);\r\n        setLabel('');  \r\n    }\r\n\r\n    return(\r\n        <form className=\"item-add-form d-flex\" onSubmit={onSubmit}>\r\n            <input required type=\"text\" className=\"form-control\" \r\n                onChange={onLabelChange} \r\n                placeholder=\"Enter your name\"\r\n                value={label} />\r\n            <button className=\"btn btn-outline-secondary\">Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UsernameForm;","import React, {useEffect, useState} from 'react';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport AppHeader from '../app-header/app-header';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport ItemAddForm from '../item-add-form/item-add-form';\r\nimport './app.scss';\r\nimport baseURL from '../../assets/baseURL';\r\nimport RequestService from '../../services/requests';\r\nimport UsernameForm from '../username/username';\r\n\r\nconst App = () => {\r\n\r\n    const user = localStorage.getItem('user') || '';\r\n\r\n    const reqService = new RequestService();\r\n\r\n    //==============State hooks====================================================\r\n\r\n    const [items, setItems] = useState([]);\r\n     \r\n    useEffect( () => {\r\n        localStorage.clear();\r\n        let mounted = true;\r\n        reqService.getItems(baseURL + 'items')\r\n        .then( res => {mounted && setItems(res)})\r\n        .catch(() => console.log('GET error!'));\r\n        return () => mounted = false;\r\n    }, []);\r\n\r\n    const [pattern, setPattern] = useState('');\r\n\r\n    const [filter, setFilter] = useState('all');\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    const [dark, setDark] = useState(false);\r\n\r\n    //==============Methods ====================================================\r\n\r\n    const createNewItem = (label) => {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: Math.random(),\r\n            owner: localStorage.getItem('user')\r\n        }\r\n    };\r\n\r\n    const deleteItem = id => { \r\n        if (window.confirm('Are you sure you want to delete this item?')) {\r\n            reqService.deleteItem(baseURL + 'items/' + id)\r\n            .then(() => {\r\n                console.log(`Item deleted`); \r\n                const idx = items.findIndex( el => el.id === id);\r\n                setItems([\r\n                    ...items.slice(0, idx),\r\n                    ...items.slice(idx+1)\r\n                ])})  //add a message for user\r\n            .catch(e => console.log('DELETE error!'));\r\n        }      \r\n    };\r\n\r\n    const addItem = (label) => { \r\n        const newItem = createNewItem(label);\r\n        reqService.postItem(baseURL + 'items', newItem)\r\n        .then(() => setItems([...items, newItem]))\r\n        .catch(() => console.log('POST error'));\r\n    };\r\n\r\n    const toggleStatus = (array, id, statusName) => { \r\n            const idx = array.findIndex( el => el.id === id);\r\n            const oldItem = array[idx];\r\n            const updatedItem = {...oldItem, [statusName]: !oldItem[statusName]}; // superficial copy of oldItem and updated property\r\n            \r\n            reqService.updateItem(baseURL + 'items/' + id, updatedItem)\r\n            .then(() => setItems([\r\n                ...array.slice(0, idx),\r\n                updatedItem,\r\n                ...array.slice(idx+1)\r\n                ]))\r\n            .catch(() => console.log('Status update error!'));        \r\n    };\r\n\r\n    const toggleDone = id => {  \r\n        toggleStatus(items, id, 'done');\r\n    };\r\n\r\n    const toggleImportant = id => { \r\n        toggleStatus(items, id, 'important');\r\n    };\r\n\r\n    const searchItems = (value) => { \r\n        setPattern(value);\r\n    };\r\n\r\n    const onSwitchFilter = (filterName) => { \r\n        setFilter(filterName);\r\n    }\r\n\r\n    const handleLogin = (username) => {\r\n        localStorage.setItem('user', username);\r\n        setLoggedIn(true);\r\n    }\r\n\r\n    const toggleDark = () => {\r\n        dark ? setDark(false) : setDark(true);\r\n    };\r\n\r\n    // ===== Rendering variables ===============\r\n    const visibleItems = items.filter(item => item.owner === user)\r\n                                .filter(item => item.label.toLowerCase().indexOf(pattern.toLowerCase()) > -1)\r\n                                .filter(item => {\r\n                                    if (filter === 'done') {\r\n                                        return item.done === true\r\n                                    }\r\n                                    else if (filter === 'active') {\r\n                                        return item.done === false\r\n                                    }\r\n                                    else return item\r\n                                });\r\n\r\n    const doneCount = visibleItems.filter(el => el.done === true).length;\r\n    const pendingCount = visibleItems.length - doneCount;\r\n\r\n    // ===== User panel viewed after login ===============\r\n    const userPanel = loggedIn ? \r\n         <>\r\n            <div className=\"user-panel d-flex\">\r\n                <div className=\"greeting mr-2\">Hello, {user}</div> \r\n                <button className=\"btn btn-outline-secondary logout\" onClick={() => setLoggedIn(false)}>Log out</button>            \r\n            </div>\r\n            \r\n        </>\r\n        : null;\r\n\r\n    // ===== Todo list view based on if logged in or not ===============\r\n    const list = loggedIn ? \r\n        <>\r\n            <AppHeader toDo={pendingCount} done={doneCount} />\r\n            <div className=\"top-panel d-flex\">\r\n                <SearchPanel value={pattern} onSearch={searchItems}/>\r\n                <ItemStatusFilter filter={filter} onSwitch={onSwitchFilter}/>\r\n            </div>\r\n            <TodoList darkmode={dark} items={visibleItems} onDelete={deleteItem} \r\n                onToggleDone={toggleDone} onToggleImportant={toggleImportant}/>\r\n            <ItemAddForm onAdd={addItem}/> \r\n        </> \r\n        : \r\n        <>\r\n            <h1>ToDo List</h1>\r\n                <UsernameForm onLogin={handleLogin}/>\r\n            <div className=\"descr mt-2\">Please log in. No password required.<br/>To create a new user just type your username. \r\n                <br/><span>Please note that our todo items will be available to anyone who logs in with your username</span></div>\r\n        </>\r\n\r\n    // ===== Styling ===============\r\n\r\n\r\n\r\n    return(\r\n        <div className={dark ? \"todo-app darkmode\" : \"todo-app\"}>\r\n            {userPanel}\r\n            <div className=\"dark-toggle custom-control custom-switch mt-3 mb-2\">\r\n                <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">Dark mode</label>\r\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" \r\n                    value={dark} onChange={toggleDark}/>\r\n            </div>\r\n            {list}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport 'bootswatch/dist/sketchy/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}